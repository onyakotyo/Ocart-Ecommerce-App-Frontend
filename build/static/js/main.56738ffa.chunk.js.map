{"version":3,"sources":["constants/userConstants.js","constants/orderConstants.js","actions/userActions.js","components/SearchBox.js","constants/cartConstants.js","components/Logo.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","constants/productConstants.js","actions/productActions.js","components/ProductCarousel.js","components/SearchButtons.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","actions/orderActions.js","screens/ProfileScreen.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/OrderListScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductEditScreen.js","screens/ProductInsertExcelScreen.js","screens/ProductListScreen.js","screens/SellerOrderListScreen.js","screens/SellRegisterScreen.js","screens/SellerConfirmationScreen.js","screens/SellerProductListScreen.js","screens/SellerRegisterSuccess.js","screens/CheckoutScreen/StripeHelper.js","screens/CheckoutScreen/StripeCheckout.js","screens/CheckoutScreen/Success.js","screens/CheckoutScreen/Cancelled.js","screens/SellingHow.js","components/FooterPrivacy.js","components/FooterTerms.js","components/NotFound.js","screens/ShippingLabelsPages.js","screens/ShippingLabels.js","screens/ShippingReceipt.js","screens/ShippingReceiptDisplay.js","App.js","reportWebVitals.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","index.js"],"names":["USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_DETAILS_SELLER_REQUEST","USER_DETAILS_SELLER_SUCCESS","USER_DETAILS_SELLER_FAIL","USER_DETAILS_SELLER_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","SELLER_REGISTER_REQUEST","SELLER_REGISTER_SUCCESS","SELLER_REGISTER_FAIL","SELLER_CONFIRMATION_REQUEST","SELLER_CONFIRMATION_SUCCESS","SELLER_CONFIRMATION_FAIL","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","SELLER_ORDER_LIST_REQUEST","SELLER_ORDER_LIST_SUCCESS","SELLER_ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","logout","dispatch","localStorage","removeItem","type","getUserDetails","id","getState","a","userInfo","userLogin","config","headers","Authorization","token","axios","get","data","payload","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","className","style","width","Control","name","onChange","target","value","placeholder","Button","variant","CART_ADD_ITEM","CART_CLEAR_ITEMS","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_REMOVE_ALL_ITEMS","Logo","height","x1","y1","x2","y2","offset","stopColor","stopOpacity","cx","cy","rx","ry","fill","fontSize","fontFamily","x","y","Header","match","useHistory","useDispatch","cartItems","useSelector","state","cart","userDetails","success","user","useEffect","_id","Navbar","bg","expand","collapseOnSelect","Container","to","Nav","Link","Toggle","aria-controls","Collapse","render","isSeller","sellerConfirmation","reduce","acc","item","Number","qty","NavDropdown","title","Item","onClick","window","clear","isAdmin","Footer","backgroundColor","color","fluid","Row","Col","textDecoration","Date","getFullYear","Rating","text","defaultProps","Product","product","Card","images","map","image","index","alignItems","justifyContent","padding","Img","src","Body","Title","as","Text","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","margin","display","Paginate","pages","page","Pagination","Array","keys","active","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","SELLER_PRODUCT_LIST_REQUEST","SELLER_PRODUCT_LIST_SUCCESS","SELLER_PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProducts","pageNumber","listProductDetails","console","log","deleteProduct","delete","createProduct","post","ProductCarousel","productTopRated","loading","error","products","Carousel","pause","Image","alt","Caption","SearchButtons","setValue","ToggleButtonGroup","toggle","flexWrap","radio","idx","ToggleButton","Meta","description","keywords","Helmet","content","HomeScreen","params","productList","sm","md","lg","xl","ProductScreen","setQty","setRating","comment","setComment","productDetails","productReviewCreate","successProductReview","loadingProductReview","errorProductReview","indexx","setIndex","img","xs","onMouseEnter","rounded","marginBottom","marginTop","ListGroup","companyName","sellerName","countryName","countInStock","disabled","reviews","length","review","createdAt","substring","productId","Group","controlId","Label","row","addToCart","seller","setItem","JSON","stringify","CartScreen","location","search","split","removeFromCartHandler","removeFromCart","toFixed","FormContainer","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","userRegister","register","createOrder","order","Promise","all","dataOrders","dataMail","getOrderDetails","ProfileScreen","userUpdateProfile","orderListMy","loadingOrders","errorOrders","orders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","class","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","shippingAddress","stripePaymentMethod","setStripePaymentMethod","Check","label","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","orderCreate","paymentMethod","orderItems","OrderScreen","orderId","sdkReady","setSdkReady","orderDetails","orderPay","loadingPay","successPay","orderDeliver","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","paypal","href","moment","format","amount","onSuccess","paymentResult","payOrder","deliverOrder","OrderListScreen","orderList","UserListScreen","userList","users","successDelete","userDelete","deleteHandler","confirm","deleteUser","sellerRegisteredAt","sellerConfirmedAt","UserEditScreen","userId","setIsAdmin","userUpdate","loadingUpdate","errorUpdate","successUpdate","updateUser","checked","ProductEditScreen","props","setPrice","setImages","brand","setBrand","category","setCategory","setCountInStock","setDescription","uploading","setUploading","productUpdate","uploadFileHandler","files","formData","FormData","i","append","updateProduct","File","multiple","custom","ProductInsertExcelScreen","reader","FileReader","result","workbook","XLSX","read","sheetName","SheetNames","worksheet","Sheets","json","utils","sheet_to_json","readAsArrayBuffer","textAlign","alignSelf","ProductListScreen","productCreate","loadingCreate","errorCreate","successCreate","createdProduct","productDelete","loadingDelete","errorDelete","SellerOrderListScreen","sellerOrderList","SellRegisterScreen","firstName","setFirstname","middleName","setMiddlename","lastName","setLastname","mobile","setMobile","setCompanyName","town","setTown","bankAccount","setBankAccount","chargeCard","setChargeCard","idNumber","setIdNumber","sellerRegister","saveSellerRegister","SellerConfirmationScreen","clientIdCheck","setClientIdCheck","bankAccountCheck","setBankAccountCheck","chargeableCard","setChargeableCard","sellerConfirmationPost","Change","SellerProductListScreen","productListSeller","userDetailsSeller","sellerProducts","SellerRegisterSuccess","CardGroup","fetchFromAPI","endpoint","opts","method","fetch","res","StripeCheckout","stripe","useStripe","checkoutHandler","line_items","quantity","price_data","currency","unit_amount","product_data","customer_email","sessionId","redirectToCheckout","withRouter","SellingHow","fontWeight","border","FooterPrivacy","FooterTerms","ShippingLabelsPages","this","React","PureComponent","connect","ShippingLabels","componentRef","useRef","handlePrint","useReactToPrint","current","documentTitle","pageStyle","ref","borderRadius","borderColor","ShippingReceipt","ShippingReceiptDisplay","App","paddingLeft","paddingRight","path","component","exact","NotFound","Success","Cancelled","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","existItem","find","filter","cartItemsFromStorage","getItem","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","stripePromise","loadStripe","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.56738ffa.chunk.js","sourcesContent":["export const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST \"\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS \"\nexport const USER_LOGIN_FAIL= \"USER_LOGIN_FAIL \"\nexport const USER_LOGOUT= \"USER_LOGOUT \"\n\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST \"\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS \"\nexport const USER_REGISTER_FAIL= \"USER_REGISTER_FAIL \"\n\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST \"\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS \"\nexport const USER_DETAILS_FAIL= \"USER_DETAILS_FAIL \"\nexport const USER_DETAILS_RESET= \"USER_DETAILS_RESET\"\n\n\nexport const USER_DETAILS_SELLER_REQUEST = \"USER_DETAILS_SELLER_REQUEST \"\nexport const USER_DETAILS_SELLER_SUCCESS = \"USER_DETAILS_SSELLER_UCCESS \"\nexport const USER_DETAILS_SELLER_FAIL= \"USER_DETAILS_SELLER_FAIL \"\nexport const USER_DETAILS_SELLER_RESET= \"USER_DETAILS_SELLER_RESET\"\n\nexport const USER_UPDATE_PROFILE_REQUEST = \"USER_UPDATE_PROFILE_REQUEST \"\nexport const USER_UPDATE_PROFILE_SUCCESS = \"USER_UPDATE_PROFILE_SUCCESS \"\nexport const USER_UPDATE_PROFILE_FAIL= \"USER_UPDATE_PROFILE_FAIL \"\nexport const USER_UPDATE_PROFILE_RESET= \"USER_UPDATE_PROFILE_RESET \"\n\nexport const USER_LIST_REQUEST = \"USER_LIST_REQUEST \"\nexport const USER_LIST_SUCCESS = \"USER_LIST_SUCCESS \"\nexport const USER_LIST_FAIL= \"USER_LIST_FAIL \"\nexport const USER_LIST_RESET=\"USER_LIST_RESET\"\n\nexport const USER_DELETE_REQUEST = \"USER_DELETE_REQUEST \"\nexport const USER_DELETE_SUCCESS = \"USER_DELETE_SUCCESS \"\nexport const USER_DELETE_FAIL= \"USER_DELETE_FAIL \"\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'\n\nexport const SELLER_REGISTER_REQUEST= 'SELLER_REGISTER_REQUEST'\nexport const SELLER_REGISTER_SUCCESS = 'SELLER_REGISTER_SUCCESS'\nexport const SELLER_REGISTER_FAIL = 'SELLER_REGISTER_FAIL'\nexport const SELLER_REGISTER_RESET = 'SELLER_REGISTER_RESET'\n\nexport const SELLER_CONFIRMATION_REQUEST= 'SELLER_CONFIRMATION_REQUEST'\nexport const SELLER_CONFIRMATION_SUCCESS = 'SELLER_CONFIRMATION_SUCCESS'\nexport const SELLER_CONFIRMATION_FAIL = 'SELLER_CONFIRMATION_FAIL'\nexport const SELLER_CONFIRMATION_RESET = 'SELLER_CONFIRMATION_RESET'\n\n\n\n\n\n\n","export const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST'\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS'\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL'\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET'\n\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST'\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS'\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL'\n\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST'\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS'\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL'\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET'\n\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST'\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS'\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL'\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET'\n\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST'\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS'\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL'\n\nexport const SELLER_ORDER_LIST_REQUEST = 'SELLER_ORDER_LIST_REQUEST'\nexport const SELLER_ORDER_LIST_SUCCESS = 'SELLER_ORDER_LIST_SUCCESS'\nexport const SELLER_ORDER_LIST_FAIL = 'SELLER_ORDER_LIST_FAIL'\n\nexport const SELLER_PLACED_ORDER_LIST_REQUEST = 'SELLER_PLACED_ORDER_LIST_REQUEST'\nexport const SELLER_PLACED_ORDER_LIST_SUCCESS = 'SELLER_PLACED_ORDER_LIST_SUCCESS'\nexport const SELLER_PLACED_ORDER_LIST_FAIL = 'SELLER_PLACED_ORDER_LIST_FAIL'\n\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST'\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS'\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL'\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET'\n\n","import { USER_DETAILS_SELLER_REQUEST, USER_DETAILS_SELLER_SUCCESS, USER_DETAILS_SELLER_FAIL, SELLER_CONFIRMATION_FAIL, SELLER_CONFIRMATION_REQUEST, SELLER_CONFIRMATION_SUCCESS, SELLER_REGISTER_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_RESET, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DELETE_FAIL, USER_DELETE_SUCCESS, USER_DELETE_REQUEST, USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST, SELLER_REGISTER_FAIL, SELLER_REGISTER_SUCCESS } from \"../constants/userConstants\"\nimport axios from 'axios'\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\"\n\nexport const login = (email, password ) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', {  email, password }, config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data) )\n\n    } catch(error){\n        dispatch({\n                        type: USER_LOGIN_FAIL,\n                        payload: error.response && error.response.data.message ? \n                        error.response.data.message\n                        : error.message\n                    })\n    }\n\n    \n}\n\n\nexport const logout = () => (dispatch) => {\n        localStorage.removeItem('userInfo')\n        dispatch({type: USER_LOGOUT})\n        dispatch({type: USER_DETAILS_RESET})\n        dispatch({type: ORDER_LIST_MY_RESET})\n        dispatch({type: USER_LIST_RESET})\n    }\nexport const register = (name, email, password ) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n         dispatch({\n\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data) )\n\n    } catch(error){\n        dispatch({\n                        type: USER_REGISTER_FAIL,\n                        payload: error.response && error.response.data.message ? \n                        error.response.data.message\n                        : error.message\n                    })\n    }\n\n}\n\n\nexport const saveSellerRegister = ( sellerRegister) => async (dispatch, getState) => {\n\n   \n    console.log('USER2',  sellerRegister)\n\n   \n  try {\n    dispatch({\n      type: SELLER_REGISTER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/sellerRegister`, sellerRegister,  config)\n\n\n    console.log('USER REGISTER ACTION', data)\n\n    //console.log('USER4', sellerRegister,)\n\n    dispatch({\n      type: SELLER_REGISTER_SUCCESS,\n      payload: data,\n    })\n    \n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: SELLER_REGISTER_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\n\n\nexport const sellerConfirmationPost = (userId, sellerConfirmation) => async (dispatch, getState) => {\n\n    console.log('SELLER1', sellerConfirmation)\n\n   \n\n  try {\n    dispatch({\n      type: SELLER_CONFIRMATION_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n \n\n    const { data } = await axios.put(`/api/users/sellerConfirm/${userId}`, sellerConfirmation, config)\n\n    console.log('ORDER3', data)\n\n    console.log('ORDER4', sellerConfirmation,)\n\n    dispatch({\n      type: SELLER_CONFIRMATION_SUCCESS,\n      payload: data,\n    })\n    \n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: SELLER_CONFIRMATION_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\n\n\n    export const getUserDetails = (id) => async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: USER_DETAILS_REQUEST\n            })\n\n            const { userLogin: { userInfo } } = getState()\n\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const { data } = await axios.get(`/api/users/${id}`, config)\n\n            //console.log('USER ACTION', data)\n\n            dispatch({\n                type: USER_DETAILS_SUCCESS,\n                payload: data\n            })\n\n            \n\n       \n\n        } catch(error){\n            dispatch({\n                            type: USER_DETAILS_FAIL,\n                            payload: error.response && error.response.data.message ? \n                            error.response.data.message\n                            : error.message\n                        })\n        }\n\n    \n}\n\nexport const getUserSellerDetails = (userId) => async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: USER_DETAILS_SELLER_REQUEST\n            })\n\n            const { userLogin: { userInfo } } = getState()\n\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const { data } = await axios.get(`/api/users/seller/${userId}`, config)\n\n            dispatch({\n                type: USER_DETAILS_SELLER_SUCCESS,\n                payload: data\n            })\n\n            \n\n       \n\n        } catch(error){\n            dispatch({\n                            type: USER_DETAILS_SELLER_FAIL,\n                            payload: error.response && error.response.data.message ? \n                            error.response.data.message\n                            : error.message\n                        })\n        }\n\n    \n}\n\n export const updateUserProfile = (user) => async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: USER_UPDATE_PROFILE_REQUEST\n            })\n\n            const { userLogin: { userInfo } } = getState()\n\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const { data } = await axios.put(`/api/users/profile`, user,  config)\n\n            dispatch({\n                type: USER_UPDATE_PROFILE_SUCCESS,\n                payload: data\n            })\n\n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data,\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n            \n\n       \n\n        } catch(error){\n            dispatch({\n                            type: USER_UPDATE_PROFILE_FAIL,\n                            payload: error.response && error.response.data.message ? \n                            error.response.data.message\n                            : error.message\n                        })\n        }\n\n    \n}\n\n\n\n export const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}","import React, { useState } from 'react'\nimport { Form, Button, } from 'react-bootstrap'\n\nconst SearchBox = ({ history }) => {\n  const [keyword, setKeyword] = useState('')\n\n   \n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (keyword.trim()) {\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n  }\n\n  return (\n    <Form onSubmit={submitHandler}   className=\"d-flex\" style={{width: '22rem'}} > \n     \n      <Form.Control\n        // style={{width: '60%'}}\n        type='text'\n        name='q'\n        onChange={(e) => setKeyword(e.target.value)}\n        placeholder='Search Products...'\n        className='mr-sm-2 ml-sm-2 text-center m-2'\n        \n      ></Form.Control>\n      <Button type='submit' variant='outline-success'  \n      className=' m-auto'\n      >\n        Search\n      </Button>\n     \n    </Form>\n  )\n}\n\nexport default SearchBox","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\nexport const CART_CLEAR_ITEMS = 'CART_RESET'\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\nexport const CART_REMOVE_ALL_ITEMS = 'CART_REMOVE_ALL_ITEMS'","import React from 'react'\n\nconst Logo = () => {\n    return (\n        \n            // <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"130\" width=\"500\">\n            //         <defs>\n            //             <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n            //             <stop offset=\"0%\" style=\"stop-color:rgb(255,255,255);stop-opacity:1\" />\n            //             <stop offset=\"100%\" style=\"stop-color:rgb(0,51,0);stop-opacity:1\" />\n            //             </linearGradient>\n            //         </defs>\n            //         <ellipse cx=\"100\" cy=\"70\" rx=\"85\" ry=\"55\" fill=\"url(#grad1)\" />\n            //         <text fill=\"#ffffff\" font-size=\"45\" font-family=\"Verdana\" x=\"50\" y=\"86\">OCART</text>\n            //         Sorry, your browser does not support inline SVG.\n            // </svg>\n            <svg height=\"130\" width=\"200\" >\n                <defs>\n                    <linearGradient id=\"grad1\" x1=\"0%\" y1=\"0%\" x2=\"100%\" y2=\"0%\">\n                    <stop offset=\"0%\"\n                    style={{stopColor: 'rgb(0,0,0)', stopOpacity: 1}} />\n                    <stop offset=\"100%\"\n                    style={{stopColor: 'rgb(0,255,255)', stopOpacity: 1}} />\n                    </linearGradient>\n                </defs>\n                <ellipse cx=\"100\" cy=\"70\" rx=\"85\" ry=\"55\" fill=\"url(#grad1)\" />\n                <text fill=\"#ffffff\" fontSize=\"35\" fontFamily=\"Verdana\"\n                x=\"35\" y=\"86\">OCART</text>\n                Sorry, your browser does not support inline SVG.\n            </svg>\n    \n    )\n}\n\nexport default Logo\n","import React, {useEffect} from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Route } from 'react-router-dom'\nimport {Navbar, Nav, Container, NavDropdown} from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\nimport SearchBox  from './SearchBox'\nimport { getUserDetails } from '../actions/userActions'\nimport { useHistory } from \"react-router-dom\"\nimport { CART_REMOVE_ALL_ITEMS }  from '../constants/cartConstants'\nimport Logo from './Logo'\n//import SearchButtons from '../components/SearchButtons'\n\n\nconst Header = ({ match }) => {\n\n    const history = useHistory()\n\n    //const userId = match.params.id\n\n    const dispatch = useDispatch()\n\n     //const productId = match.params.id\n\n  //const qty = history.location.search ? Number(history.location.search.split('=')[1]) : 1\n\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  //console.log('CART', cartItems )\n\n\n  \n\n    const userDetails = useSelector(state => state.userDetails)\n    const { success, user} = userDetails\n\n    \n\n\n      //console.log('User', user.isSeller)\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo } = userLogin\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        } else {\n            if (userInfo) {\n                dispatch(getUserDetails(userInfo._id))\n            } else{\n               \n               \n            }\n        }\n    }, [dispatch, history, userInfo, success])\n\n\n    const logoutHandler = () => {\n         //history.push('/') \n        dispatch(logout())\n       \n        dispatch({ type: CART_REMOVE_ALL_ITEMS })\n        window.localStorage.clear(); //clear all localstorage\n        //window.localStorage.removeItem(\"my_item_key\"); //remove one item   \n        \n    }\n\n\n    return (\n        <header>\n            <Navbar bg=\"primary\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to='/' >\n                        {/* <Navbar.Brand ></Navbar.Brand> */}\n                        <Nav.Link><Logo /></Nav.Link>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\" >\n                    <Route render={({ history }) => <SearchBox history={history}  />} />\n\n                   \n                     \n                    <Nav className=\"m-auto\">\n                    {!userInfo ? (\n                        <LinkContainer to=\"/login\"> \n                            <Nav.Link>\n                                {/* <i className=\"fas fa-hand-holding-usd fa-lg \"></i>  */}\n                                Sell\n                            </Nav.Link>\n                    </LinkContainer>   \n\n                    ) : user.isSeller ? (\n                         <LinkContainer to=\"/sellingHow\"> \n                            <Nav.Link>\n                                {/* <i className=\"fas fa-hand-holding-usd fa-lg \"></i>  */}\n                                Sell\n                            </Nav.Link>\n                    </LinkContainer>   \n                    ) :\n\n                    (\n                         <LinkContainer to=\"/sellerRegister\"> \n                            <Nav.Link>\n                                <i className=\"fas fa-hand-holding-usd fa-lg \"></i> Sell\n                            </Nav.Link>\n                    </LinkContainer>   \n                    )\n                \n                }\n\n                    { user && user.sellerConfirmation && user.isSeller ? (\n                        <LinkContainer to=\"/selllerProductlist\"> \n                            <Nav.Link>\n                                My Product List\n                            </Nav.Link>\n                    </LinkContainer>   \n                    ) \n                    : (\n                         null\n                    )\n                    }\n\n                     { user && user.sellerConfirmation && user.isSeller ? (\n                        <LinkContainer to='/sellerOrders'> \n                            <Nav.Link>\n                                Seller Orders List\n                            </Nav.Link>\n                    </LinkContainer>   \n                    ) \n                    : (\n                         null\n                    )\n                    }\n\n                    \n                     \n                    <LinkContainer to=\"/cart\">  \n                        <Nav.Link>\n                            <i className= 'fas fa-shopping-cart'></i> Cart {' '}\n                            {/* <Badge variant=\"danger\"> {cartItems.reduce((acc, item) => acc + Number(item.qty), 0)}</Badge> */}\n                            <span className=\"badge rounded-pill bg-danger\">{cartItems.reduce((acc, item) => acc + Number(item.qty), 0)}</span>\n                        </Nav.Link>\n                        {/* <h6>\n                            ({cartItems.reduce((acc, item) => acc + Number(item.qty), 0)})\n                            items\n                        </h6> */}\n                    </LinkContainer>\n                    { \n                    userInfo ? (\n                        \n                        <NavDropdown title= { userInfo.name }  id='username'>\n                            <LinkContainer to='/profile'>\n                                <NavDropdown.Item><i className= 'fas fa-user'></i> Profile</NavDropdown.Item>\n                            </LinkContainer>\n                            <NavDropdown.Item onClick={ logoutHandler }> Logout</NavDropdown.Item>\n                        </NavDropdown>   \n\n                                        )\n                    : \n                        <LinkContainer to=\"/login\"> \n                            <Nav.Link>\n                                <i className= 'fas fa-user'></i> Sign In\n                            </Nav.Link>\n                        </LinkContainer>    \n                    }\n\n                    {userInfo && userInfo.isAdmin && (\n                        <NavDropdown title= 'Admin'  id='adminmenu'>\n                            <LinkContainer to='/admin/userlist'>\n                                <NavDropdown.Item><i className= 'fas fa-users'></i> Users</NavDropdown.Item>\n                            </LinkContainer>\n                            <LinkContainer to='/admin/productlist'>\n                                <NavDropdown.Item>Products</NavDropdown.Item>\n                            </LinkContainer>\n                              <LinkContainer to='/admin/orderlist'>\n                                <NavDropdown.Item>Orders</NavDropdown.Item>\n                            </LinkContainer>\n                            \n                        </NavDropdown>   \n                    )\n                    }\n                    \n                        </Nav>\n                        \n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport {Link} from 'react-router-dom'\n\nconst Footer = () => {\n    return (\n     \n        <footer >\n            <Container  style={{backgroundColor: '#232F3E', height: '10rem',  color: '#ffffff',   }} fluid >\n                <Row>\n                    <Col className='text-center m-4'   expand=\"lg\" >\n                    <p><Link style = {{color: '#ffffff', textDecoration: 'none'}} to=\"/privacy\" >Privacy</Link></p>\n\n\n                    <p><Link style = {{color: '#ffffff', textDecoration: 'none'}} to=\"/terms\" >Terms of Service</Link></p>\n\n                    <p>Copyright &copy; {new Date().getFullYear()}  Ocart </p>\n                            \n                    </Col>\n                </Row>\n\n            </Container>\n            \n        </footer>\n      \n      \n    )\n}\n\nexport default Footer\n","import React from 'react'\n//import { PropTypes } from 'prop-types'\n\nconst Rating = ({value, text, color}) => {\n    return (\n        <div className='rating'>\n            <span>\n                <i style={{color}} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >= 4 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                <i style={{color}} className={value >= 5 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\n            </span>\n            <span>\n                {text && text }\n            \n            </span>\n        </div>\n    )\n}\n\n\nRating.defaultProps = {\n    color: '#f8e825'\n}\n\n// Rating.propTypes = {\n//     value: PropTypes.number.isRequired,\n//     text: PropTypes.string.isRequired,\n//     color: PropTypes.string,\n// }\n\nexport default Rating\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport Rating from './Rating'\nimport { Link } from 'react-router-dom'\n\n\nconst Product = ({product}) => {\n    return (\n        <Card className='my-3 p-3 rounded'>\n            <Link to={`/product/${product._id}`}>\n                {product.images?.map((image, index) => \n                \n                <ul key={index} style={{alignItems:'center', justifyContent: 'center', padding: 2}} >\n                    { index === 0 && (<Card.Img src={image} variant='top' style={{height: '12rem', width: '100%'}} />  )}\n                </ul>\n                \n                \n                )}\n                {/* <Card.Img  src={product.image} variant='top' /> */}\n            </Link>\n\n            <Card.Body>\n                <Link to={`/product/${product._id}`}>\n                    <Card.Title as='div'>\n                        <strong>{product.name} </strong>\n                        \n                    </Card.Title>  \n                </Link>\n\n                <Card.Text as='div'>\n                    <Rating value={product.rating} text={`${product.numReviews} reviews`} />\n                </Card.Text>\n                <Card.Text as='h3'>\n                    ${product.price}\n                </Card.Text>\n            </Card.Body>\n        </Card>\n    )\n}\n\n\nexport default Product\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nconst Message = ({ variant, children}) => {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nMessage.defaultProps = {\n    variant: 'success'\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\nconst Loader = () => {\n    return (\n        <Spinner animation='border' \n        role='status'\n        style={{width: '100px', height: '100px', margin: 'auto', display: 'block' }}\n        >\n            <span className='sr-only'> Loading...</span>\n            \n        </Spinner>\n    )\n}\n\nexport default Loader\n","import React from 'react'\nimport { Pagination } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\n  return (\n    pages > 1 && (\n      <Pagination>\n        {[...Array(pages).keys()].map((x) => (\n          <LinkContainer\n            key={x + 1}\n            to={\n              !isAdmin\n                ? keyword\n                  ? `/search/${keyword}/page/${x + 1}`\n                  : `/page/${x + 1}`\n                : `/admin/productlist/${x + 1}`\n            }\n          >\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\n          </LinkContainer>\n        ))}\n      </Pagination>\n    )\n  )\n}\n\nexport default Paginate","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL= 'PRODUCT_LIST_FAIL'\n\nexport const SELLER_PRODUCT_LIST_REQUEST = 'SEELER_PRODUCT_LIST_REQUEST'\nexport const SELLER_PRODUCT_LIST_SUCCESS = 'SELLER_PRODUCT_LIST_SUCCESS'\nexport const SELLER_PRODUCT_LIST_FAIL= 'SELLER PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL= 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'\n\n","import { PRODUCT_LIST_REQUEST, \n    SELLER_PRODUCT_LIST_SUCCESS,\n    SELLER_PRODUCT_LIST_FAIL,\n    PRODUCT_LIST_SUCCESS, \n    PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n    SELLER_PRODUCT_LIST_REQUEST} \n    from '../constants/productConstants'\nimport axios from 'axios'\nimport { logout } from './userActions'\n\n    export  const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\n        try {\n            dispatch({\n                type: PRODUCT_LIST_REQUEST\n            })\n\n          \n          const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\n\n            dispatch({\n                type: PRODUCT_LIST_SUCCESS,\n                payload: data\n            })\n        } catch(error){\n            dispatch({\n                type: PRODUCT_LIST_FAIL,\n                payload: error.response && error.response.data.message ? \n                error.response.data.message\n                : error.message\n            })\n        }\n    }\n\n    export  const listProductDetails = (id) => async (dispatch) => {\n        try {\n            dispatch({\n                type: PRODUCT_DETAILS_REQUEST\n            })\n\n\n            const { data } = await axios.get(`/api/products/${id}`)\n\n            console.log('PRODUCT DETAIL', data)\n\n            dispatch({\n                type: PRODUCT_DETAILS_SUCCESS,\n                payload: data\n            })\n        } catch(error){\n            dispatch({\n                type: PRODUCT_DETAILS_FAIL,\n                payload: error.response && error.response.data.message ? \n                error.response.data.message\n                : error.message\n            })\n        }\n    }\n\nexport const deleteProduct = (id) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(\n      `/api/products/${id}`, config\n    )\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProduct = (id) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const {data} =  await axios.post(\n      `/api/products`, {}, config\n    )\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\n export  const listSellerProducts = () => async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: SELLER_PRODUCT_LIST_REQUEST\n            })\n\n             const {\n                userLogin: { userInfo },\n              } = getState()\n\n              const config = {\n                headers: {\n                  Authorization: `Bearer ${userInfo.token}`,\n                },\n              }\n\n          \n          const { data } = await axios.get('/api/products/sellerProducts', config)\n\n          //console.log('SELLER DATA', data)\n\n            dispatch({\n                type: SELLER_PRODUCT_LIST_SUCCESS,\n                payload: data\n            })\n        } catch(error){\n            dispatch({\n                type: SELLER_PRODUCT_LIST_FAIL,\n                payload: error.response && error.response.data.message ? \n                error.response.data.message\n                : error.message\n            })\n        }\n    }\n","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Carousel, Image } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Loader from './Loader'\nimport Message from './Message'\nimport { listTopProducts } from '../actions/productActions'\n\nconst ProductCarousel = () => {\n  const dispatch = useDispatch()\n\n  const productTopRated = useSelector((state) => state.productTopRated)\n  const { loading, error, products } = productTopRated\n\n  useEffect(() => {\n    dispatch(listTopProducts())\n  }, [dispatch])\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <Carousel pause='hover' className='bg-primary' >\n\n      {products.map((product) => (\n        <Carousel.Item key={product._id}>\n          <Link to={`/product/${product._id}`}>\n            <Image className=\"d-block w-40\" src={product.images[0]} alt={product.name} fluid />\n            \n            <Carousel.Caption className='carousel-caption' >\n              <h2>\n                {product.name} (${product.price})\n              </h2>\n            </Carousel.Caption>\n          </Link>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  )\n}\n\nexport default ProductCarousel","import React, {useState} from 'react'\nimport {ToggleButton ,ToggleButtonGroup , Container} from 'react-bootstrap'\nimport { useHistory } from \"react-router-dom\";\n\nconst SearchButtons = () => {\n\nlet history = useHistory();\n\n//console.log('History',history)\n\nconst [value, setValue] = useState('')\n\n //console.log('RV1',value)\n\n //const keyword = value\n\n //console.log('RV2',keyword)\n\nconst handleChange = (keyword) => {\n  setValue(keyword)\n   if (keyword.trim()) {\n      //console.log('RV2',keyword)\n      history.push(`/search/${keyword}`)\n    } else {\n      history.push('/')\n    }\n}\n\n//history={history}\n\n  \nconst radios = [\n    { name: 'Electronics', value: 'electronics' },\n    { name: 'Health & Personal Care', value: 'healthPersonalcare' },\n    { name: 'Mobile Phones', value: 'mobilePhone' },\n    { name: 'Grocery & Food', value: 'groceryFood' },\n    { name: 'Fashion', value: 'fashion' },\n    { name: 'Sports & Outdoors', value: 'sportsOutdoors' },\n\n  ];\n\n\n\n    return (\n        \n         \n      <Container className=\"text-center \">\n              \n      \n\n      <ToggleButtonGroup  \n        name=\"radio\" \n        type=\"radio\" \n        value={value} \n        onChange={handleChange} \n        toggle\n      \n        className=\"text-center py-3  mt-3 \"\n        display = 'none'\n        style={{ flexWrap: \"wrap\" }}\n      \n      >\n            {radios.map((radio, idx) => (\n              <ToggleButton\n                key={idx}\n                type=\"radio\"\n                variant=\"outline-primary\"\n                //name=\"radio\"\n                value={radio.value}\n                //checked={radioValue === radio.value}\n                //onChange={(e) => setRadioValue(e.currentTarget.value)}`\n                //onClick = {submitHandler} \n                \n              >\n                \n                <span className=\"text-center py-4 p-5 \">{radio.name}</span>\n                \n              </ToggleButton>\n           \n        ))}\n\n       \n      </ToggleButtonGroup>\n             \n\n       \n           \n\n      \n\n      </Container>\n      \n            \n     \n    )\n}\n\nexport default SearchButtons\n","import React from 'react'\nimport { Helmet } from 'react-helmet'\n\nconst Meta = ({ title, description, keywords }) => {\n  return (\n    <Helmet>\n      <title>{title}</title>\n      <meta name='description' content={description} />\n      <meta name='keyword' content={keywords} />\n    </Helmet>\n  )\n}\n\nMeta.defaultProps = {\n  title: 'Ocart | Quality expat products',\n  description: 'Buy and sell at good prices',\n  keywords: 'expat, electronics, buy electronics, cheap electronics, fresh food, british products, zimbabwean products, south african products',\n}\n\nexport default Meta","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Paginate from '../components/Paginate'\nimport ProductCarousel from '../components/ProductCarousel'\nimport SearchButtons from '../components/SearchButtons'\nimport Meta from '../components/Meta'\nimport { listProducts } from '../actions/productActions'\n\n\nconst HomeScreen = ({ match }) => {\n\n\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products, page, pages } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n \n\n  return (\n    <>\n      <Meta />\n      {!keyword ? (\n        <ProductCarousel />\n      ) : (\n        <Link to='/' className='btn btn-primary'>\n          Go Back\n        </Link>\n      )}\n\n      <SearchButtons  />\n\n      <h1 className=' mb-1'>Latest Products</h1>\n\n   \n\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Row >\n            {products.map((product) => (\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3} bg='light' >\n                <Product product={product} />\n              </Col>\n            ))}\n          </Row>\n          <Paginate\n            pages={pages}\n            page={page}\n            keyword={keyword ? keyword : ''}\n          />\n        </>\n      )}\n    </>\n  )\n}\n\nexport default HomeScreen","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form} from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  //console.log('PRODUCT DETAILS',product)\n\n  //product.images.map(xx => console.log('IMAGES',xx))\n\n \n  //console.log('PI',product.images)\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  //!product._id || product._id !==\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n    }\n    if ( match.params.id) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n  }, [dispatch, match, successProductReview, ])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n   \n\n   const [indexx, setIndex] = useState(0)\n\n   //console.log('PRODUCT INDEXX',indexx)\n\n  //  const setIndex = (index) => {\n\n  //  }\n\n\n\n  return (\n    <>\n      <Link className='btn btn-primary my-3'  variant='success' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Col>\n          <Row>\n          {product.images?.map((img, index) => \n          \n\n                  <Col sm={3} xs={3} md={3} lg={1} >\n                  \n                    \n                    <Button className='btn-light mb-2 border border-primary' \n                      //onClick={() => setIndex(index)}\n                      onMouseEnter={() => setIndex(index)} \n                      //onMouseLeave={() => setIndex(index)}\n                      >\n                        <Image style={{height: '4rem', width: '4rem' }} src={img} alt={product.name} rounded />\n                    </Button>\n                    \n                   \n                  </Col>\n             \n              \n              \n              )\n              }\n          </Row>\n          <Row md={12} lg={12}> \n          \n              <Col sm={12}  xs={12} md={5} lg={5} style={{alignItems: 'center', justifyContent: 'center', marginBottom: 6}}>\n                  {product.images?.map((img, index) => \n                <Col sm={12}  xs={12} md={12} lg={12} >\n                  {\n                      indexx === index && \n                      (<Col key={indexx} md={12}>\n                        <Image style={{height: '30em', width: '34rem' }} src={img} alt={product.name} fluid/>\n                      </Col>)\n        \n                  }\n                  </Col>\n              )\n              }  \n\n             \n              </Col>\n          \n           \n         \n            <Col md={4} style={{marginTop: 2}}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n                {product.companyName && (\n                   <ListGroup.Item>\n                  Sold by: {product.companyName}\n                </ListGroup.Item>\n                )}\n                {product.sellerName && (\n                  <ListGroup.Item>\n                  Country: {product.countryName}\n                </ListGroup.Item>\n                 )}\n               \n                \n              </ListGroup>\n              \n            </Col>\n            <Col md={3} >\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          </Col>\n          \n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message variant='success'>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment' className='mb-2'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message className='bg-success' variant='success'> \n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen","import axios from 'axios'\nimport {\n  CART_ADD_ITEM,\n  CART_REMOVE_ITEM,\n  CART_SAVE_SHIPPING_ADDRESS,\n  CART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  const { data } = await axios.get(`/api/products/${id}`)\n\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      seller: data.user,\n      product: data._id,\n      name: data.name,\n      image: data.images[0],\n      price: data.price,\n      description: data.description,\n      countInStock: data.countInStock,\n      qty,\n    },\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\nexport const removeAllFromCart = (id) => (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id,\n  })\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n\n\nexport const saveShippingAddress = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data,\n  })\n\n  localStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n\nexport const savePaymentMethod = (data) => (dispatch) => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data,\n  })\n\n  localStorage.setItem('paymentMethod', JSON.stringify(data))\n}","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\nimport Message from '../components/Message'\nimport { addToCart, removeFromCart } from '../actions/cartActions'\n\nconst CartScreen = ({ match, location, history }) => {\n  const productId = match.params.id\n\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1\n\n  const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n  const { cartItems } = cart\n\n  useEffect(() => {\n    if (productId) {\n      dispatch(addToCart(productId, qty))\n    }\n  }, [dispatch, productId, qty])\n\n  const removeFromCartHandler = (id) => {\n    dispatch(removeFromCart(id))\n  }\n\n  const checkoutHandler = () => {\n    history.push('/login?redirect=shipping')\n  }\n\n  const shoppingHandler = () => {\n    history.push('/')\n  }\n\n  return (\n    <Row>\n      <Col md={8}>\n        <h1>Shopping Cart</h1>\n        {cartItems.length === 0 ? (\n          <Message>\n            Your cart is empty <Link to='/'>Go Back</Link>\n          </Message>\n        ) : (\n          <ListGroup variant='flush'>\n            {cartItems.map((item) => (\n              <ListGroup.Item key={item.product}>\n                <Row>\n                  <Col md={2}>\n                    <Image src={item.image} alt={item.name} fluid rounded />\n                  </Col>\n                  <Col md={3}>\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\n                  </Col>\n                  <Col md={2}>${item.price}</Col>\n                  <Col className='product-page-section' md={2}>\n                    <Form.Control\n                      as='select'\n                      value={item.qty}\n                      onChange={(e) =>\n                        dispatch(\n                          addToCart(item.product, Number(e.target.value))\n                        )\n                      }\n                    >\n                      {[...Array(item.countInStock).keys()].map((x) => (\n                        <option key={x + 1} value={x + 1}>\n                          {x + 1}\n                        </option>\n                      ))}\n                    </Form.Control>\n                  </Col>\n                  <Col md={2}>\n                    <Button\n                      type='button'\n                      variant='light'\n                      onClick={() => removeFromCartHandler(item.product)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </Col>\n                </Row>\n              </ListGroup.Item>\n            ))}\n          </ListGroup>\n        )}\n      </Col>\n      <Col md={4}>\n        <Card>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>\n                Subtotal ({cartItems.reduce((acc, item) => acc + Number(item.qty), 0)})\n                items\n              </h2>\n              $\n              {cartItems\n                .reduce((acc, item) => acc +  Number(item.qty) * Number(item.price), 0)\n                .toFixed(2)}\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                disabled={cartItems.length === 0}\n                onClick={checkoutHandler}\n              >\n                Proceed To Checkout\n              </Button>\n            </ListGroup.Item>\n            <ListGroup.Item>\n              <Button\n                type='button'\n                className='btn-block'\n                // disabled={cartItems.length === 0}\n                onClick={shoppingHandler}\n              >\n                Continue Shopping\n              </Button>\n            </ListGroup.Item>\n          </ListGroup>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CartScreen","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\nconst FormContainer = ({children}) => {\n    return (\n        <Container>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    {children}\n                </Col>\n\n            </Row>\n\n        </Container>\n  \n    )\n}\n\nexport default FormContainer\n","import React, { useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { login } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\nimport { CART_REMOVE_ALL_ITEMS }  from '../constants/cartConstants'\n\n\nconst LoginScreen = ({location, history}) => {\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n\n    const dispatch = useDispatch()\n\n    const userLogin = useSelector(state => state.userLogin)\n\n\n    const { loading, error, userInfo} = userLogin\n\n    console.log('USER',userInfo)\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect)\n            \n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        window.localStorage.clear(); //clear all localstorage\n        dispatch(login(email, password))\n        // dispatch({ type: CART_REMOVE_ALL_ITEMS })\n        \n    }\n\n\n    return (\n    <FormContainer>\n        <h1>Sign In</h1>\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n            <Form.Group controlId='email'>\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control \n                    type='email' \n                    placeholder='Enter email' \n                    value={email} \n                    onChange={(e) => setEmail(e.target.value)}>\n\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                    type='password' \n                    placeholder='Enter password' \n                    value={password} \n                    onChange={(e) => setPassword(e.target.value)}>\n\n                </Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary' className='mt-2'>\n                Sign In\n            </Button>\n        </Form>\n\n        <Row className='py-3'>\n            <Col>\n            New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}> Register</Link>\n            </Col>\n        </Row>\n    </FormContainer>\n    ) \n}\n\nexport default LoginScreen\n","import React, { useState, useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { register } from '../actions/userActions'\nimport FormContainer from '../components/FormContainer'\n\n\nconst RegisterScreen = ({location, history}) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userRegister = useSelector(state => state.userRegister)\n\n\n    const { loading, error, userInfo} = userRegister\n\n    //console.log(userInfo)\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n        if(userInfo) {\n            history.push(redirect)\n        }\n    }, [history, userInfo, redirect])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n       if(password !== confirmPassword){\n           setMessage('Password do not match')\n       } else {\n            dispatch(register(name, email, password))\n       }\n       \n    }\n\n\n    return (\n    <FormContainer>\n        <h1>Sign UP</h1>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n        {loading && <Loader />}\n        <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n                <Form.Label>Name</Form.Label>\n                <Form.Control \n                    type='name' \n                    placeholder='Enter name' \n                    value={name} \n                    onChange={(e) => setName(e.target.value)}>\n\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId='email'>\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control \n                    type='email' \n                    placeholder='Enter email' \n                    value={email} \n                    onChange={(e) => setEmail(e.target.value)}>\n\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                    type='password' \n                    placeholder='Enter password' \n                    value={password} \n                    onChange={(e) => setPassword(e.target.value)}>\n\n                </Form.Control>\n            </Form.Group>\n             <Form.Group controlId='confirmPassword'>\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control \n                    type='password' \n                    placeholder='Confirm password' \n                    value={confirmPassword} \n                    onChange={(e) => setConfirmPassword(e.target.value)}>\n\n                </Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary' className='mt-2'>\n                Register\n            </Button>\n        </Form>\n\n        <Row className='py-3'>\n            <Col>\n                Have an account? {' '} \n                <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}> Login</Link>\n            </Col>\n        </Row>\n    </FormContainer>\n    ) \n}\n\nexport default RegisterScreen\n","import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  SELLER_ORDER_LIST_FAIL,\n  SELLER_ORDER_LIST_SUCCESS,\n  SELLER_ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  SELLER_PLACED_ORDER_LIST_SUCCESS,\n  SELLER_PLACED_ORDER_LIST_REQUEST,\n  SELLER_PLACED_ORDER_LIST_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n\n   console.log('DATA CREATE ORDER',order)\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n     console.log('MAIL CREATE ORDER1',order)\n\n   \n\n    // const { data } = await axios.post(`/api/orders`, order, config)\n\n    // const { data } = await axios.post(`/api/mail`, order, config)\n\n  const [dataOrders, dataMail] = await Promise.all([axios.post('/api/orders', order, config), axios.post('/api/mail', order, config)])\n\n    console.log('MAIL-DATA-ORDERS',dataOrders)\n\n    console.log('MAIL-DATA-MAIL',dataMail)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: dataOrders,\n    })\n\n     dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: dataMail,\n    })\n\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: dataOrders,\n    })\n\n     dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: dataMail,\n    })\n\n    // dispatch({\n    //   type: CART_REMOVE_ALL_ITEMS\n\n    // })\n\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\nexport const payOrder = (orderId, ) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\nexport const listSellerOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SELLER_ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/sellerOrders`, config)\n\n    dispatch({\n      type: SELLER_ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: SELLER_ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\n\nexport const sellerPlacedlistOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SELLER_PLACED_ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: SELLER_PLACED_ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: SELLER_PLACED_ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}","import React, { useState, useEffect} from 'react'\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\nimport { listMyOrders } from '../actions/orderActions'\n\n\n\n\nconst ProfileScreen = ({location, history}) => {\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [password, setPassword] = useState('')\n    const [confirmPassword, setConfirmPassword] = useState('')\n    const [message, setMessage] = useState(null)\n\n    const dispatch = useDispatch()\n\n    const userDetails = useSelector(state => state.userDetails)\n    const { loading, error, user} = userDetails\n\n    const userLogin = useSelector(state => state.userLogin)\n    const { userInfo} = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n    const orderListMy = useSelector((state) => state.orderListMy)\n    const { loading: loadingOrders, error: errorOrders, orders } = orderListMy\n\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        } else {\n            if(!user.name || success ){\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n                dispatch(listMyOrders())\n            } else{\n                setName(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success ])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n       if(password !== confirmPassword){\n           setMessage('Password do not match')\n       } else {\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\n       }\n       \n    }\n\n\n    return (\n   <Row>\n       <Col md={3}>\n         <h2>User Profile</h2>\n        {message && <Message variant='danger'>{message}</Message>}\n        {error && <Message variant='danger'>{error}</Message>}\n         {success && <Message variant='success'>Profile Updated</Message>}\n        {/* {loading && <Loader />} */}\n        <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n                <Form.Label>Name</Form.Label>\n                <Form.Control \n                    type='name' \n                    placeholder='Enter name' \n                    value={name} \n                    onChange={(e) => setName(e.target.value)}>\n\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId='email'>\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control \n                    type='email' \n                    placeholder='Enter email' \n                    value={email} \n                    onChange={(e) => setEmail(e.target.value)}>\n\n                </Form.Control>\n            </Form.Group>\n            <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control \n                    type='password' \n                    placeholder='Enter password' \n                    value={password} \n                    onChange={(e) => setPassword(e.target.value)}>\n\n                </Form.Control>\n            </Form.Group>\n             <Form.Group controlId='confirmPassword'>\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control \n                    type='password' \n                    placeholder='Confirm password' \n                    value={confirmPassword} \n                    onChange={(e) => setConfirmPassword(e.target.value)}>\n\n                </Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n                Update\n            </Button>\n        </Form>\n       </Col>\n       <Col md={9}>\n           <h2>My Orders</h2>\n           {loadingOrders ? (\n          <Loader />\n        ) : errorOrders ? (\n          <Message variant='danger'>{errorOrders}</Message>\n        ) : (\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>DATE</th>\n                <th>TOTAL</th>\n                <th>PAID</th>\n                <th>DELIVERED</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {orders.map((order) => (\n                <tr key={order._id}>\n                  <td>{order._id}</td>\n                  <td>{order.createdAt.substring(0, 10)}</td>\n                  {/* <td>{order.createdAt}</td> */}\n                  <td>${order.totalPrice}</td>\n                  <td>\n                    {order.isPaid ? (\n                      order.paidAt\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    {order.isDelivered ? (\n                      order.deliveredAt.substring(0, 10)\n                    ) : (\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\n                    )}\n                  </td>\n                  <td>\n                    <LinkContainer to={`/order/${order._id}`}>\n                      <Button className='btn-sm' variant='success'>\n                        Details\n                      </Button>\n                    </LinkContainer>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        )}\n       </Col>\n   </Row>\n    )\n}\n\nexport default ProfileScreen\n","import React from 'react'\nimport { Nav } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\n\n \nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\n    return (\n        <Nav className = 'justify-content-center mb-4 ' >\n            <Nav.Item>\n                { step1 ? (\n                    <LinkContainer  to='/login' style={{color:'green'}}>\n                       \n                        <Nav.Link >\n                            <i class=\"fas fa-check-circle m-1\"></i>\n                            Sign In\n                        </Nav.Link>\n                    </LinkContainer>\n                ) : (<Nav.Link disabled>\n                     <i class=\"far fa-check-circle m-1\"></i>\n                    Sign In\n                    </Nav.Link>)}\n            </Nav.Item>\n            <Nav.Item>\n                { step2 ? (\n                    <LinkContainer to='/shipping' style={{color:'green'}}>\n                        <Nav.Link style={{color:'green'}}>\n                        <i class=\"fas fa-check-circle m-1\"></i>\n                            Shipping\n                            \n                        </Nav.Link>\n                    </LinkContainer>\n                ) : (<Nav.Link disabled>\n                    <i class=\"far fa-check-circle m-1\"></i>\n                    Shipping\n                    \n                    </Nav.Link>)}\n            </Nav.Item>\n            <Nav.Item>\n                { step3 ? (\n                    <LinkContainer to='/payment' style={{color:'green'}}>\n                        <Nav.Link>\n                        <i class=\"fas fa-check-circle m-1\"></i>\n                            Payment\n                        </Nav.Link>\n                    </LinkContainer>\n                ) : (<Nav.Link disabled>\n                    <i class=\"far fa-check-circle m-1\"></i>\n                    Payment\n                    </Nav.Link>)}\n            </Nav.Item>\n            <Nav.Item>\n                { step4 ? (\n                    <LinkContainer to='/placeorder' style={{color:'green'}}>\n                        <Nav.Link>\n                        <i class=\"fas fa-check-circle m-1\"></i>\n                            Place Order\n                        </Nav.Link>\n                    </LinkContainer>\n                ) : (<Nav.Link disabled>\n                    <i class=\"far fa-check-circle m-1\"></i>\n                    Place Order\n                    </Nav.Link>)}\n            </Nav.Item>\n            \n        </Nav>\n    )\n}\n\nexport default CheckoutSteps\n","import React, { useState } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { saveShippingAddress } from '../actions/cartActions'\n\n\nconst ShippingScreen = ({ history }) => {\n  \n  //const cart = useSelector((state) => state.cart)\n  //const { shippingAddress } = cart\n\n  // const [address, setAddress] = useState(shippingAddress.address)\n  // const [city, setCity] = useState(shippingAddress.city)\n  // const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\n  // const [country, setCountry] = useState(shippingAddress.country)\n\n  const [address, setAddress] = useState('')\n  const [city, setCity] = useState('')\n  const [postalCode, setPostalCode] = useState('')\n  const [country, setCountry] = useState('')\n\n  const dispatch = useDispatch()\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(saveShippingAddress({ address, city, postalCode, country }))\n    history.push('/payment')\n  }\n\n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 />\n      <h1>Shipping</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group controlId='address'>\n          <Form.Label>Address</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter address'\n            value={address}\n            required\n            onChange={(e) => setAddress(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='city'>\n          <Form.Label>City</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter city'\n            value={city}\n            required\n            onChange={(e) => setCity(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='postalCode'>\n          <Form.Label>Postal Code</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter postal code'\n            value={postalCode}\n            required\n            onChange={(e) => setPostalCode(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Form.Group controlId='country'>\n          <Form.Label>Country</Form.Label>\n          <Form.Control\n            type='text'\n            placeholder='Enter country'\n            value={country}\n            required\n            onChange={(e) => setCountry(e.target.value)}\n          ></Form.Control>\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n      </Form>\n    </FormContainer>\n  )\n}\n\nexport default ShippingScreen","import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if(!shippingAddress){\n      history.push('/shipping')\n  }\n\n  //const [paymentMethod, setPaymentMethod ] = useState('PayPal')\n\n   const [stripePaymentMethod, setStripePaymentMethod ] = useState('')\n\n  \n  \n  const dispatch = useDispatch()\n\n  // if(stripePaymentMethod) {\n\n  //   const submitHandler = (e) => {\n  //   e.preventDefault()\n  //   dispatch(savePaymentMethod(stripePaymentMethod))\n  //   history.push('/placeorder')\n\n  // }\n\n  // } else {\n\n  //   const submitHandler = (e) => {\n  //   e.preventDefault()\n  //   dispatch(savePaymentMethod(paymentMethod))\n  //   history.push('/placeorder')\n  // }\n\n  // }\n\n    const submitHandler = (e) => {\n    e.preventDefault()\n    //dispatch(savePaymentMethod(paymentMethod))\n    dispatch(savePaymentMethod(stripePaymentMethod))\n     //history.push('/placeorder')\n    history.push('/checkout')\n\n    }\n\n  \n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3/>\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n        \n        <Col>\n            {/* <Form.Check\n                type= 'radio'\n                label='PayPal or Creadit Card'\n                id='PayPal'\n                name='paymentMethod'\n                value='PayPal'\n                checked\n                Change={(e) => setPaymentMethod(e.target.value)}\n            > \n            </Form.Check> */}\n\n             <Form.Check\n                 type= 'radio'\n                 label='Stripe'\n                 id='Stripe'\n                 name='stripePaymentMethod'\n                 required = {true}\n                 onChange={(e) => setStripePaymentMethod(e.target.value)}\n             > \n             </Form.Check>\n        </Col>\n\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n\n        </Form>\n     \n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen","import React, { useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { createOrder } from '../actions/orderActions'\nimport { getUserDetails } from '../actions/userActions'\n//import { ORDER_CREATE_RESET } from '../constants/orderConstants'\n//import { USER_DETAILS_RESET } from '../constants/userConstants'\n\n\nconst PlaceOrderScreen = ({history}) => {\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector(state => state.userDetails)\n  const { user} = userDetails\n\n  const cart = useSelector((state) => state.cart)\n\n  console.log('CART', cart.cartItems)\n\n   //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n   //cart.totalPrice = Number(cart.itemsPrice + cart.taxPrice).toFixed(2)\n   console.log('T-PRICE',cart.totalPrice)\n    \n  \n\n  const orderCreate =  useSelector(state => state.orderCreate)\n  const { order, success, error } = orderCreate\n\n   console.log('ORDER-CREATE',orderCreate)\n\n  useEffect(() => {\n      if(success) {\n          history.push(`/order/${order._id}`)\n        } \n        // eslint-disable-next-line\n    }, [history,success])\n\n  const placeOrderHandler = () => {\n    dispatch(createOrder({\n      \n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        paymentMethod: cart.paymentMethod,\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice\n    }))\n  }\n  \n\n    return (\n        <>\n            <CheckoutSteps step1 step2 step3 step4 />\n            <Row>\n                <Col md={8}>\n                    <ListGroup variant='flush'>\n                    <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong>Address: </strong>\n                {cart.shippingAddress.address}, {cart.shippingAddress.city},{' '}\n                {cart.shippingAddress.postalCode},{' '}\n                {cart.shippingAddress.country}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <strong>Method: </strong>\n              {cart.paymentMethod}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {cart.cartItems.length === 0 ? (\n                <Message>Your cart is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {cart.cartItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                            </ListGroup>\n                        )}\n                        </ListGroup.Item>\n\n                    </ListGroup>\n                </Col>\n\n                <Col md={4}>\n                    <Card>\n                        <ListGroup variant='flush'>\n                            <ListGroup.Item>\n                                <h2>Order Summary</h2>\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Items</Col>\n                                    <Col>${cart.itemsPrice}</Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Shipping</Col>\n                                    <Col>${cart.shippingPrice}</Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Tax</Col>\n                                    <Col>${cart.taxPrice}</Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                <Row>\n                                    <Col>Total</Col>\n                                    <Col>${cart.totalPrice}</Col>\n                                </Row>\n\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                                {error && <Message variant='danger'>{error}</Message>}\n                            </ListGroup.Item>\n                            <ListGroup.Item>\n                              <Button type='button' className='btn-block' disabled={cart.cartItems === 0 }\n                                onClick={placeOrderHandler}>Place Order</Button>\n\n                            </ListGroup.Item>\n\n                        </ListGroup>\n                    </Card>\n                </Col>\n            </Row>\n        </>\n    )\n}\n\nexport default PlaceOrderScreen\n","import React, { useEffect, useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\nimport axios from 'axios'\nimport { PayPalButton} from 'react-paypal-button-v2'\nimport { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants'\nimport { LinkContainer} from 'react-router-bootstrap'\nimport moment from 'moment'\n\n\n\nconst OrderScreen = ({match, history}) => {\n\n      const orderId = match.params.id\n\n  const [sdkReady, setSdkReady] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const orderDetails = useSelector((state) => state.orderDetails)\n  const { order, loading, error } = orderDetails\n\n   const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const orderPay = useSelector((state) => state.orderPay)\n  const { loading: loadingPay, success: successPay } = orderPay\n\n  const orderDeliver = useSelector((state) => state.orderDeliver)\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n    if (!loading) {\n    //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n   order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  }\n\n\nuseEffect(() => {\n   if(!userInfo ){\n     history.push('/login')\n   }\n    const addPayPalScript = async () => {\n      const { data: clientId } = await axios.get('/api/config/paypal')\n      const script = document.createElement('script')\n      script.type = 'text/javascript'\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\n      script.async = true\n      script.onload = () => {\n        setSdkReady(true)\n      }\n      document.body.appendChild(script)\n    }\n\n    if (!order || successPay || successDeliver || order._id !== orderId) {\n      dispatch({ type: ORDER_PAY_RESET })\n      dispatch({ type: ORDER_DELIVER_RESET })\n      dispatch(getOrderDetails(orderId))\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript()\n      } else {\n        setSdkReady(true)\n      }\n    }\n  }, [dispatch, orderId, successPay, successDeliver, order, history, userInfo])\n\n  const successPaymentHandler = (paymentResult) => {\n    console.log(paymentResult)\n    dispatch(payOrder(orderId, paymentResult))\n  }\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order))\n\n  }\n\n    return loading ? (\n     <Loader />\n  \n  ) : error ? (\n    <Message variant='danger'>{error}</Message>\n  ) : (\n    <>\n      \n      <Row>\n        <h2 className=\"text-center\">Order <span style={{color: '#18bc9c'}}>{order.orderId}</span></h2>\n        <Col md={8}>\n          <ListGroup variant='flush'>\n            <ListGroup.Item>\n              <h2>Shipping</h2>\n              <p>\n                <strong> Name: </strong> {order.user.name}\n              </p>\n              <p>\n                <strong> Email: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p>\n              <p>\n                <strong> Address:</strong>{' '}\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\n                {order.shippingAddress.postalCode},{' '}\n                {order.shippingAddress.country}\n              </p>\n              {order.isDelivered ? (\n                <Message variant='success'>\n                  Delivered on {moment(order.deliveredAt).format(\"DD/MM/YYYY , h:mm a\")}\n                </Message>\n              ) : (\n                <Message variant='danger'>Not Delivered</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n              {order.isPaid ? (\n                <Message variant='success'>\n                  Paid on {moment(order.paidAt).format(\"DD/MM/YYYY , h:mm a\")}\n                  </Message>\n              ) : (\n                <Message variant='danger'>Not Paid</Message>\n              )}\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n              {order.orderItems.length === 0 ? (\n                <Message>Order is empty</Message>\n              ) : (\n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col md={1}>\n                          <Image\n                            src={item.image}\n                            alt={item.name}\n                            fluid\n                            rounded\n                          />\n                        </Col>\n                        <Col>\n                          <Link to={`/product/${item.product}`}>\n                            {item.name}\n                          \n                          </Link>\n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          </ListGroup>\n        </Col>\n        <Col md={4}>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n           \n              \n\n              {!order.isPaid && (\n                <ListGroup.Item>\n                  {loadingPay && <Loader />}\n                  {!sdkReady ? (\n                    <Loader />\n                  ) : (\n                    <PayPalButton\n                      amount={order.totalPrice}\n                      onSuccess={successPaymentHandler}\n                    />\n                  )}\n                </ListGroup.Item>\n              )}\n\n              {loadingDeliver && <Loader />}\n              {userInfo &&\n                //userInfo.isSeller &&\n                order.isPaid &&\n                !order.isDelivered && (\n                  <ListGroup.Item>\n                    <Button\n                      type='button'\n                      className='btn btn-block'\n                      onClick={deliverHandler}\n                    >\n                      Mark As Delivered\n                    </Button>\n                  </ListGroup.Item>\n                )}\n            </ListGroup>\n          </Card>\n          <ListGroup.Item className='text-center mt-5'>\n                    <LinkContainer to={`/shippingLabels/${orderId}`}> \n                      <Button variant='warning'>\n                        Print Shipping Label\n                      </Button>\n                    </LinkContainer>  \n              </ListGroup.Item>\n\n              <ListGroup.Item className='text-center mt-5'>\n                    <LinkContainer to={`/shipping-receipt/${orderId}`}> \n                      <Button variant='warning'>\n                        Print Shipping Receipt\n                      </Button>\n                    </LinkContainer>  \n              </ListGroup.Item>\n        </Col>\n\n        \n    \n           \n      </Row>\n    </>\n  )\n}\n\n\nexport default OrderScreen\n\n\n\n\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {  Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listOrders } from '../actions/orderActions'\nimport moment from 'moment'\n\nconst OrderListScreen = ({ history }) => {\n  const dispatch = useDispatch()\n\n  const orderList = useSelector((state) => state.orderList)\n  const { loading, error, orders } = orderList\n  \n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n  return (\n    <>\n      \n      <h1>Orders</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        \n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>EMAIL</th>\n              <th>DATE CREATED</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order.orderId}</td>\n                 <td>{order.user.name }</td>\n                <td>{order.user.email }</td>\n                <td>\n                  {/* {order.createdAt.substring(0, 10)} */}\n                  {moment(order.createdAt).format(\"DD/MM/YYYY , h:mm a\")}\n               \n                  </td>\n                <td>${order.totalPrice.toFixed(2)}</td>\n                <td>\n                  {order && order.isPaid ? (\n                    //order.paidAt.substring(0, 10) \n                    //order.paidAt\n                    `${moment(order.paidAt).format(\"DD/MM/YYYY , h:mm a\")}`\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order && order.isDelivered ? (\n                    // order.deliveredAt.substring(0, 10)\n                    `${moment(order.deliveredAt).format(\"DD/MM/YYYY , h:mm a\")}`\n\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`}>\n                    <Button variant='success' className='btn-sm'>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n\n        </Table>\n        \n      )}\n      \n    </>\n  )\n}\n\nexport default OrderListScreen","import React, {useEffect} from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listUsers, deleteUser } from '../actions/userActions'\n\n\nconst UserListScreen = ({ history }) => {\n\n    const dispatch = useDispatch()\n\n    const userList = useSelector((state) => state.userList)\n    const { loading, error, users } = userList\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo} = userLogin\n\n    const userDelete = useSelector((state) => state.userDelete)\n    const { success: successDelete } = userDelete\n\n    useEffect(() => {\n        if(userInfo && userInfo.isAdmin) {\n            dispatch(listUsers())\n        } else {\n            history.push('/login')\n        }\n    }, [dispatch, history, userInfo, successDelete])\n\n    \n    console.log('USERS',users)\n\n    const deleteHandler = (id) => {\n        if(window.confirm('Are you sure')) {\n            dispatch(deleteUser(id))\n        }\n        \n    }\n\n    return (\n         <>\n      <h1>Users</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>NAME</th>\n              <th>EMAIL</th>\n              <th>SELLER REGISTRATION DATE</th>\n              <th>SELLER CONFIRMED</th>\n              <th>CONFIRMED BY</th>\n              <th>SELLER CONFIRMATION DATE</th>\n              <th>ADMIN</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user._id}>\n                <td>{user._id}</td>\n                <td>{user.name}</td>\n                <td>\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\n                </td>\n                <td className=\"text-center\">\n                  {user && user.sellerRegisteredAt ? (\n                    user.sellerRegisteredAt.substring(0, 10) \n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                 </td>\n                <td className=\"text-center\">\n                  {user && user.isSeller ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                  <LinkContainer to={`/admin/user/${user._id}/sellerConfirmation`}>\n                    <Button variant='light' className='btn-sm m-3'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                </td>\n\n                <td className=\"text-center\">\n                  { user && user.isSeller && user.sellerConfirmation ? (\n                    user.sellerConfirmation.name\n                  ):(\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )} \n                </td>\n                <td className=\"text-center\">\n                  { user && user.isSeller && user.sellerConfirmation ? (\n                    user.sellerConfirmedAt.substring(0, 10) \n                  ):(\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )} \n               \n                </td>\n                <td className=\"text-center\"> \n                  {user.isAdmin ? (\n                    <i className='fas fa-check' style={{ color: 'green' }}></i>\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                  \n                </td>\n\n                <td>\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\n                    <Button variant='light' className='btn-sm'>\n                      <i className='fas fa-edit'></i>\n                    </Button>\n                  </LinkContainer>\n                  <Button\n                    variant='danger'\n                    className='btn-sm'\n                    onClick={() => deleteHandler(user._id)}\n                  >\n                    <i className='fas fa-trash'></i>\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </>\n    )\n}\n\nexport default UserListScreen\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { getUserDetails, updateUser } from '../actions/userActions'\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\n\nconst UserEditScreen = ({ match, history }) => {\n  const userId = match.params.id\n\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [isAdmin, setIsAdmin] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const userDetails = useSelector((state) => state.userDetails)\n  const { loading, error, user } = userDetails\n\n  const userUpdate = useSelector((state) => state.userUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = userUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      \n      dispatch({ type: USER_UPDATE_RESET })\n      history.push('/admin/userlist')\n      \n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n        setName(user.name)\n        setEmail(user.email)\n        setIsAdmin(user.isAdmin)\n        \n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }))\n  }\n\n  return (\n    <>\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit User</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='isadmin'>\n              <Form.Check\n                type='checkbox'\n                label='Is Admin'\n                checked={isAdmin}\n                onChange={(e) => setIsAdmin(e.target.checked)}\n              ></Form.Check>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default UserEditScreen","\nimport axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport _ from 'lodash'\n\n\nconst ProductEditScreen = ({ match, history, props }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [images, setImages] = useState('')\n  const [brand, setBrand] = useState('')\n  const [category, setCategory] = useState('')\n  const [countInStock, setCountInStock] = useState(0)\n  const [description, setDescription] = useState('')\n  const [uploading, setUploading] = useState(false)\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        //setImage(product.image)\n        setImages(product.images)\n        setBrand(product.brand)\n        setCategory(product.category)\n        setCountInStock(product.countInStock)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n  const uploadFileHandler = async (e) => {\n    let { files } = e.target\n\n     //console.log('FORMDATA-FILES', files )\n    \n    const formData = new FormData()\n        for (let i = 0; i < files.length; i++) {\n            formData.append('images', files[i]) \n            // console.log('FILES', files[i])                     \n        }\n  \n        //props.getMultiple();\n\n  \n\n    // const file = e.target.files[0]\n    // const formData = new FormData()\n    // formData.append('image', file)\n\n      console.log('FORMDATA-FILES',  files)\n    \n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n      console.log('BEFORE AXIOS', formData )\n\n      const { data } = await axios.post('/api/upload',formData, config)\n\n     console.log('AXIOS-PHOTOS', data )\n\n      setImages(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        //image,\n        images,\n        brand,\n        category,\n        description,\n        countInStock,\n      })\n    )\n  }\n\n   //console.log('AXIOS-DATA',images )\n\n   \n\n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-primary my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n           \n            <Form.Group controlId='image'>\n              <Form.Label>Image</Form.Label>\n              \n              <Form.Control\n                type='text'\n                placeholder='Enter image url'\n                value={images}\n                onChange={(e) => setImages(e.target.value)}\n              ></Form.Control>\n              \n              <Form.File\n                multiple\n                id='image-file'\n                //label='Choose Files'\n                custom\n                onChange={uploadFileHandler}\n              ></Form.File>\n              {uploading && <Loader />}\n            </Form.Group>\n          \n\n            <Form.Group controlId='brand'>\n              <Form.Label>Brand</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter brand'\n                value={brand}\n                onChange={(e) => setBrand(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='countInStock'>\n              <Form.Label>Count In Stock</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter countInStock'\n                value={countInStock}\n                onChange={(e) => setCountInStock(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='category'>\n              <Form.Label>Category</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen","import axios from 'axios'\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\nimport _ from 'lodash'\n//import xlsx from 'xlsx'\nimport XLSX from 'xlsx';\n\nconst ProductInsertExcelScreen = () => {\n\n    const [files, setFiles] = useState('')\n    const [uploading, setUploading] = useState(false)\n\n    const productUpdate = useSelector((state) => state.productUpdate)\n\n    const {\n        loading: loadingUpdate,\n        error: errorUpdate,\n        success: successUpdate,\n    } = productUpdate\n\n\n    const uploadFileHandler = async (e) => {\n        \n     let { files } = e.target\n\n    //  //console.log('FORMDATA-FILES', files )\n    \n    // const formData = new FormData()\n    //     for (let i = 0; i < files.length; i++) {\n    //         formData.append('images', files[i]) \n    //         // console.log('FILES', files[i])                     \n    //     }\n\n    //if(e.target.files){\n\n        const reader = new FileReader();\n\n        reader.onload = (e) => {\n            const data = e.target.result;\n            const workbook = XLSX.read(data, {type: 'array'});\n            const sheetName = workbook.SheetNames[0];\n            const worksheet = workbook.Sheets[sheetName];\n            const json = XLSX.utils.sheet_to_json(worksheet);\n            console.log('JSON DATA',json)\n\n            const jsonArray =[]\n\n           \n\n            //  json.map((jsn,index) => \n            //     (\n                  \n            //       (jsn && index === index) ?\n                \n            //        jsonArray.push(jsn.imageOne, jsn.imageTwo, jsn.imageThree, jsn.imageFour, jsn.imageFive) : null\n            //     )\n         \n            //    )\n\n              //  json.filter(jsn => jsn.includes('images')).map(filteredjsn => (\n\n              //      jsonArray.push(filteredjsn )\n\n              // ))\n\n              //  console.log('JSON-ARRAY', jsonArray )\n        }\n\n         reader.readAsArrayBuffer(files[0])\n\n               \n    \n  \n    //}\n\n        \n\n \n\n\n      \n    \n    setUploading(true)\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      }\n\n        console.log('JSON PRODUCT FILE', reader)\n      //const { data } = await axios.post('/api/upload',reader, config)\n\n     //console.log('AXIOS-PHOTOS', data )\n\n      //setFiles(data)\n      setUploading(false)\n    } catch (error) {\n      console.error(error)\n      setUploading(false)\n    }\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    // dispatch(\n    //   updateProduct({\n       \n    //   })\n    // )\n  }\n\n\n\n\n\n\n  return(\n    <>\n    \n        <Link to='/admin/productlist' className='btn btn-primary my-3'>\n        Go Back\n      </Link>\n      <Card>\n        <Card.Header  as=\"h4\" style={{textAlign: 'center'}}>Add Multiple Products</Card.Header>\n        <Card.Body style={{  alignSelf: 'center'}}>\n\n          {/* <FormContainer > */}\n           \n            {/* {loadingUpdate && <Loader />}\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n            {loading ? (\n              <Loader />\n            ) : error ? (\n              <Message variant='danger'>{error}</Message>\n            ) : ( */}\n              <Form onSubmit={submitHandler}>\n                {/* <Form.Group controlId='name'>\n                  <Form.Label>Name</Form.Label>\n                  <Form.Control\n                    type='name'\n                    placeholder='Enter name'\n                    value={name}\n                    onChange={(e) => setName(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='price'>\n                  <Form.Label>Price</Form.Label>\n                  <Form.Control\n                    type='number'\n                    placeholder='Enter price'\n                    value={price}\n                    onChange={(e) => setPrice(e.target.value)}\n                  ></Form.Control>\n                </Form.Group> */}\n              \n                <Form.Group controlId='file' style={{margin: 6}}>\n                  <Form.Label style={{color: '#18bc9c'}}>Only Excel File can be uploaded.</Form.Label>\n                  \n                  {/* <Form.Control\n                    type='file'\n                    placeholder='Upload file'\n                    value={files}\n                    onChange={(e) => setFiles(e.target.value)}\n                  ></Form.Control> */}\n                  \n                  <Form.File\n                    multiple\n                    id='excel-file'\n                    //label='Choose Files'\n                    custom\n                    onChange={uploadFileHandler}\n                  ></Form.File>\n                  {uploading && <Loader />}\n                </Form.Group>\n              \n    {/* \n                <Form.Group controlId='brand'>\n                  <Form.Label>Brand</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='Enter brand'\n                    value={brand}\n                    onChange={(e) => setBrand(e.target.value)}\n                  ></Form.Control>\n                </Form.Group> */}\n\n                {/* <Form.Group controlId='countInStock'>\n                  <Form.Label>Count In Stock</Form.Label>\n                  <Form.Control\n                    type='number'\n                    placeholder='Enter countInStock'\n                    value={countInStock}\n                    onChange={(e) => setCountInStock(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='category'>\n                  <Form.Label>Category</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='Enter category'\n                    value={category}\n                    onChange={(e) => setCategory(e.target.value)}\n                  ></Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='description'>\n                  <Form.Label>Description</Form.Label>\n                  <Form.Control\n                    type='text'\n                    placeholder='Enter description'\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                  ></Form.Control>\n                </Form.Group> */}\n\n                <Button type='submit' variant='primary' style={{marginTop: 6}}>\n                  Upload Products\n                </Button>\n              </Form>\n            {/* ) */}\n            {/* } */}\n          {/* </FormContainer> */}\n          </Card.Body>\n      </Card>\n    </>\n  ) \n\n};\n\nexport default ProductInsertExcelScreen;\n","import React, {useEffect} from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\nimport Paginate from '../components/Paginate'\n\n\n\nconst ProductListScreen = ({ history, match }) => {\n\n    const pageNumber = match.params.pageNumber || 1\n\n    const dispatch = useDispatch()\n\n    const productList = useSelector((state) => state.productList)\n    const { loading, error, products, page, pages } = productList\n\n    const productCreate = useSelector((state) => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n    console.log('CREATED-PRODUCT',createdProduct  )\n\n     const productDelete = useSelector((state) => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = productDelete\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo} = userLogin\n\n    useEffect(() => {\n        dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if(!userInfo || !userInfo.isAdmin) {\n            dispatch(listProducts())\n            history.push('/login')\n        } \n        if(successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n        } else {\n            dispatch(listProducts('', pageNumber))\n        }\n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct, pageNumber])\n\n    \n\n\n    const deleteHandler = (id) => {\n        if(window.confirm('Are you sure')) {\n            dispatch(deleteProduct(id))\n        }\n        \n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n    return (\n         <>\n         <Row className='align-items-center'>\n             <Col>\n                <h1>Products</h1>\n             </Col>\n             <Col className='text-right'>\n                 <Button className='my-3' onClick={createProductHandler}>\n                     <i className='fas fa-plus'></i> Create Product\n                 </Button>\n\n             </Col>\n         </Row>\n\n         {loadingDelete && <Loader /> }\n         {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n        {loadingCreate && <Loader /> }\n         {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <>\n                <Table striped bordered hover responsive className='table-sm'>\n                <thead>\n                    <tr>\n                    <th>ID</th>\n                    <th>NAME</th>\n                    <th>PRICE</th>\n                    <th>CATEGORY</th>\n                    <th>BRAND</th>\n                    <th>SELLER</th>\n                    <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {products.map((product) => (\n                    <tr key={product._id}>\n                        <td>{product.productId}</td>\n                        <td>{product.name}</td>\n                        <td>\n                        ${product.price}\n                        </td>\n                        <td>\n                            {product.category}\n                        </td>\n                        <td>{product.brand}</td>\n                        <td>{product.user}</td>\n                        <td>\n                        <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                            <Button variant='light' className='btn-sm'>\n                            <i className='fas fa-edit'></i>\n                            </Button>\n                        </LinkContainer>\n                        <Button\n                            variant='danger'\n                            className='btn-sm'\n                            onClick={() => deleteHandler(product._id)}\n                        >\n                            <i className='fas fa-trash'></i>\n                        </Button>\n                        </td>\n                    </tr>\n                    ))}\n                </tbody>\n                </Table>\n                <Paginate pages={pages} page={page} isAdmin={true}/>\n                </>\n            )}\n            </>\n    )\n}\n\nexport default ProductListScreen\n","import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {  Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listSellerOrders } from '../actions/orderActions'\nimport { getUserDetails } from '../actions/userActions'\n\nconst SellerOrderListScreen = ({ history }) => {\n\n  \n\n  const dispatch = useDispatch()\n\n  const sellerOrderList = useSelector((state) => state.sellerOrderList)\n  const { loading, error, orders } = sellerOrderList\n  \n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n    const userDetails = useSelector(state => state.userDetails)\n    const {user} = userDetails\n\n  useEffect(() => {\n    if (userInfo) {\n      dispatch(getUserDetails(userInfo._id))\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n   useEffect(() => {\n    if (userInfo && user.isSeller) {\n      dispatch(listSellerOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo, user.isSeller])\n\n  return (\n    <>\n      \n      <h1>Seller Orders List</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        \n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>EMAIL</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order.orderId}</td>\n                <td>{order.user.name }</td>\n                <td>{order.user.email }</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order && order.isPaid  ? (\n                    order.paidAt.substring(0, 10) \n                    //order.paidAt\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order && order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`} >\n                    <Button variant='success' className='btn-sm '>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n\n        </Table>\n        \n      )}\n      \n    </>\n  )\n}\n\nexport default SellerOrderListScreen","import React, {useEffect, useState} from 'react'\nimport { useSelector } from 'react-redux'\nimport {Form, Button} from 'react-bootstrap'\n//import { LinkContainer } from 'react-router-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { useDispatch} from 'react-redux'\nimport { saveSellerRegister} from '../actions/userActions'\nimport { getUserDetails } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst SellRegisterScreen = ({history}) => {\n\n \n  \n    const [firstName, setFirstname] = useState('')\n    const [middleName, setMiddlename] = useState('')\n    const [lastName, setLastname] = useState('')\n    const [email, setEmail] = useState('')\n    const [mobile, setMobile] = useState('')\n    const [companyName, setCompanyName] = useState('')\n    const [address, setAddress] = useState('')\n    const [town, setTown] = useState('')\n    const [country, setCountry] = useState('')\n    const [bankAccount, setBankAccount] = useState('')\n    const [chargeCard, setChargeCard] = useState('')\n    const [idNumber,  setIdNumber] = useState('')\n  \n\n    const dispatch = useDispatch()\n\n     const userDetails = useSelector(state => state.userDetails)\n    const { user} = userDetails\n\n    //console.log('USER-DETAILS', user)\n\n\n    const userLogin = useSelector(state => state.userLogin)\n\n    //console.log('USER-LOGIN', userLogin)\n\n\n    const { loading, error, userInfo} = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n\n\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        } else {\n            if(!user.name || success ){\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n            } else{\n                setLastname(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success ])\n\n\n    const sellerRegister =  useSelector(state => state.sellerRegister)\n    const { success: sellerRegisterSuccess } = sellerRegister\n\n  \n\n      \n\n\n    const submitHandler = (e, sellerRegister, sellerConfirmation) => {\n    e.preventDefault()\n    if(!userInfo){\n        history.push('/login')\n    }else{\n        //dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        //dispatch(getUserDetails('profile'))\n        dispatch(saveSellerRegister(\n       \n       sellerRegister =  { \n           user,\n           firstName, \n           middleName, \n           lastName, \n           companyName,\n           address, \n           town, \n           country,\n           mobile, \n           email, \n           idNumber,\n           bankAccount,\n           chargeCard\n            \n        },\n       \n\n        ))\n         if(sellerRegister.user) {\n            history.push('/sellerRegisterRequest')\n            } else {\n                 history.push('/')\n            }\n   \n    }\n    \n  }\n\n    return (\n        <>\n            <FormContainer>\n\n\n               {error && <Message variant='danger'>{error}</Message>}\n               {loading && <Loader />}\n                   \n                <h5 className='text-center py-3 m-3'>Seller Register Form</h5>\n                 \n                     \n\n                <Form  onSubmit={submitHandler}> \n                <Form.Group className='text-center'>\n                     \n                    <h5 className='text-center py-2'>Register to sell - Fill in Form below</h5>\n  \n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"First name\"  \n                        value={firstName}\n                        required\n                        onChange={(e) => setFirstname(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Middle name\" \n                        value={middleName}\n                        onChange={(e) => setMiddlename(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Last name\" \n                        value={lastName}\n                        required\n                        onChange={(e) => setLastname(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Company name\" \n                        value={companyName}\n                        required\n                        onChange={(e) => setCompanyName(e.target.value)}\n                        />\n                    <br />\n                    \n                     <Form.Control \n                        type=\"text\" \n                        placeholder=\"address\" \n                        value={address}\n                        required\n                        onChange={(e) => setAddress(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"City/Town\" \n                        value={town}\n                        required\n                        onChange={(e) => setTown(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"country\" \n                        value={country}\n                        required\n                        onChange={(e) => setCountry(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Mobile Number\" \n                        value={mobile}\n                        required\n                        onChange={(e) => setMobile(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Email Address\" \n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                        />\n                    <br />\n                     <Form.Control \n                        type=\"text\" \n                        placeholder=\"Emirates ID Number\" \n                        value={idNumber}\n                        required\n                        onChange={(e) => setIdNumber(e.target.value)}\n                        /> \n                    <br />\n                      <Form.Control \n                        type=\"text\" \n                        placeholder=\"Chargeable Bank Card\" \n                        value={chargeCard}\n                        required\n                        onChange={(e) => setChargeCard(e.target.value)}\n                        /> \n                    <br />\n                      <Form.Control \n                        type=\"text\" \n                        placeholder=\"Bank Account to send selling proceedings\" \n                        value={bankAccount}\n                        required\n                        onChange={(e) => setBankAccount(e.target.value)}\n                        /> \n                    <br />\n\n                     <Button type='submit' variant='primary'>\n                            Continue\n                    </Button>\n  \n                </Form.Group>\n                </Form>  \n            </FormContainer>\n            \n        </>\n    )\n}\n\nexport default SellRegisterScreen\n\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport {Form, Button} from 'react-bootstrap'\n//import { LinkContainer } from 'react-router-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { sellerConfirmationPost} from '../actions/userActions'\nimport { getUserDetails } from '../actions/userActions'\n//import { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\n\n\nconst SellerConfirmationScreen = ({ match, history }) => {\n\n    const userId = match.params.id\n\n    console.log('USERID', userId)\n\n    const [clientIdCheck, setClientIdCheck] = useState('Yes')\n    const [ bankAccountCheck, setBankAccountCheck] = useState('Yes')\n    const [chargeableCard,  setChargeableCard] = useState('Yes')\n\n    \n    const dispatch = useDispatch()\n\n     const userDetails = useSelector(state => state.userDetails)\n    const { success, user} = userDetails\n\n    //console.log('USER-DETAILS', user)\n\n     const userUpdate = useSelector((state) => state.userUpdate)\n        const {\n            loading: loadingUpdate,\n            error: errorUpdate,\n            success: successUpdate,\n        } = userUpdate\n\n\n    const userLogin = useSelector(state => state.userLogin)\n\n    const {loading, error, userInfo} = userLogin\n\n    //console.log('USER-LOGIN', userLogin)\n\n\n   \n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        } else {\n            if (!user.name || user._id !== userId) {\n                dispatch(getUserDetails(userId))\n            } else{\n               \n               \n            }\n        }\n    }, [dispatch, history, userInfo, user, success, userId ])\n\n\n    useEffect(() => {\n   if(!userInfo) {\n            history.push('/login')\n      \n    } else {\n      if (!user.name || user._id !== userId) {\n        dispatch(getUserDetails(userId))\n      } else {\n       \n        \n      }\n    }\n  }, [dispatch, history, userId, user, successUpdate, userInfo])\n\n     const submitHandler = (e, sellerConfirmation) => {\n          e.preventDefault()\n        if(window.confirm('By pressing continue - you will be signing off your name against this seller and you will be signed off as the authorisation officer. Are you sure, you have you filled in all the fields correctly?')) {\n            dispatch(sellerConfirmationPost(\n                    userId ,\n                sellerConfirmation = {\n                    email: userInfo.email,\n                    name: userInfo.name,\n                    chargeableCard: chargeableCard, \n                    clientIdCheck: clientIdCheck,\n                    bankAccountCheck: bankAccountCheck\n                }\n            ))\n            history.push('/admin/userlist')\n        }\n        \n     }\n\n\n    return (\n        <>\n             <FormContainer>\n\n\n                {error && <Message variant='danger'>{error}</Message>}\n               {loading && <Loader />} \n                   \n                <h5 className='text-center py-3 m-3'>Seller Confirmation Form</h5>\n                 \n                     \n\n                <Form  onSubmit={submitHandler}> \n                <Form.Group >\n\n                 \n                     \n                    <h5 className='text-center py-2'>Please fill in the form below accurately</h5>\n  \n\n                    <Form.Check\n                            type= 'radio'\n                            label='Client ID Checked'\n                            id='clientId'\n                            name='clientIdCheck'\n                            value='Yes'\n                            required\n                            //checked\n                            Change={(e) => setClientIdCheck(e.target.value)}\n                        > \n                    </Form.Check>\n                    <br />\n                    <Form.Check\n                            type= 'radio'\n                            label='Bank Account Checked'\n                            id='bankAccountCheck'\n                            name='bankAccountCheck'\n                            value='Yes'\n                            required\n                            //checked\n                            Change={(e) => setBankAccountCheck(e.target.value)}\n                        > \n                    </Form.Check>\n                    <br />\n                    <Form.Check\n                            type= 'radio'\n                            label='Chargeable Card Checked'\n                            id='chargeable Card'\n                            name='chargeableCard'\n                            value='Yes'\n                            required\n                            //checked\n                            Change={(e) => setChargeableCard(e.target.value)}\n                        > \n                    </Form.Check>\n                    <br />\n                    \n                        <Button type='submit' variant='dark' >\n                            Continue\n                        </Button>\n                   \n                     \n  \n                </Form.Group>\n                </Form>  \n            </FormContainer>\n            \n        </>\n    )\n}\n\nexport default SellerConfirmationScreen\n","import React, {useEffect} from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listSellerProducts, deleteProduct, createProduct  } from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\nimport { getUserSellerDetails } from '../actions/userActions'\n\n\n\n\nconst SellerProductListScreen = ({ history, match }) => {\n\n\n\n    const dispatch = useDispatch()\n\n   const productCreate = useSelector((state) => state.productCreate)\n    const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate\n\n     const productDelete = useSelector((state) => state.productDelete)\n    const { loading: loadingDelete, error: errorDelete, success: successDelete} = productDelete\n\n    const userLogin = useSelector((state) => state.userLogin)\n    const { userInfo} = userLogin\n\n     const userDetails = useSelector(state => state.userDetailsSeller)\n    const { user} = userDetails\n\n    const productListSeller = useSelector((state) => state.productListSeller)\n    const { loading, error, sellerProducts} = productListSeller\n\n\n\n     console.log('USER-DETAILS-SELLER', productListSeller)\n\n    useEffect(() => {\n         dispatch({ type: PRODUCT_CREATE_RESET })\n\n        if(userInfo) {\n            if(!userInfo && !sellerProducts) {\n                //dispatch(listSellerProducts())\n                 history.push('/login')\n            } \n            \n             if(successCreate) {\n            history.push(`/admin/product/${createdProduct._id}/edit`)\n                } else {\n                    dispatch(listSellerProducts())\n                }\n            \n        } \n\n    \n    }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct])\n\n    \n\n\n    const deleteHandler = (id) => {\n        if(window.confirm('Are you sure')) {\n            dispatch(deleteProduct(id))\n        }\n        \n    }\n\n    const createProductHandler = () => {\n        dispatch(createProduct())\n    }\n\n\n    const addMultipleProductHandler = () => {\n        // dispatch(createProduct())\n         history.push('/productInsertExcel')\n    }\n\n\n    return (\n         <>\n         <Row className='align-items-center'>\n             <Col>\n                <h1>My Product List</h1>\n             </Col>\n             <Col className='text-right'>\n                 <Button className='my-2' onClick={createProductHandler}>\n                     <i className='fas fa-plus'></i> Add few Products\n                 </Button>\n\n             </Col>\n             <Col className='text-right'>\n                 <Button className='my-2' onClick={addMultipleProductHandler}>\n                     <i className='fas fa-plus'></i> Add Multiple Products\n                 </Button>\n\n             </Col>\n         </Row> \n\n         {loadingDelete && <Loader /> }\n         {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n\n        {loadingCreate && <Loader /> }\n         {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n\n            {loading ? (\n                <Loader />\n            ) : error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <>\n                <Table striped bordered hover responsive className='table-sm'>\n                <thead>\n                    <tr>\n                    <th>ID</th>\n                    <th>NAME</th>\n                    <th>PRICE</th>\n                    <th>CATEGORY</th>\n                    <th>BRAND</th>\n                    <th></th>\n                    </tr>\n                </thead>\n                <tbody>\n                    \n                    { sellerProducts.length === 0 ? (\n                    \n                        <h5>No Listed seller Products</h5> )\n                            \n                        :\n                        ( \n                        sellerProducts.map((product) => (\n                        <tr key={product._id}>\n                            <td>{product.productId}</td>\n                            <td>{product.name}</td>\n                            <td>\n                            ${product.price}\n                            </td>\n                            <td>\n                                {product.category}\n                            </td>\n                            <td>{product.brand}</td>\n                             <td>\n                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                                <Button variant='light' className='btn-sm'>\n                                <i className='fas fa-edit'></i>\n                                </Button>\n                            </LinkContainer>\n                            <Button\n                                variant='danger'\n                                className='btn-sm'\n                                onClick={() => deleteHandler(product._id)}\n                            >\n                                <i className='fas fa-trash'></i>\n                            </Button>\n                            </td>\n                        </tr>\n                        ))\n                        )\n                    }\n                    \n                </tbody>\n                </Table>\n                \n                </>\n            )}\n            </>\n    )\n}\n\nexport default SellerProductListScreen\n","import React from 'react'\nimport { Card, CardGroup, Button  } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\n\nconst SellerRegisterSuccess = () => {\n\n\n\n    return (\n        <>\n        <CardGroup>\n                \n                <Card className=\"text-center\">\n                    <Card.Header as=\"h4\">Seller Registration Request Successful</Card.Header>\n                \n                    <i className=\"fas fa-hand-holding-usd fa-lg py-3\" ></i>\n                    <Card.Body>\n                    <Card.Title>Thank you for applying to be a Seller</Card.Title>\n                    <Card.Text>\n                        We are currently processing your request and \n                        will send you a confirmation email shortly, also check your profile.\n                    </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                    <LinkContainer to='/'>\n                        <Button variant=\"dark\">Go back to Home Page</Button>\n                    </LinkContainer>\n                    \n                    </Card.Footer>\n                </Card>\n            </CardGroup>\n            \n        </>\n    )\n}\n\nexport default SellerRegisterSuccess\n","\n\n\n\n\n\n\nconst API = 'http://localhost:5000';\n\nexport const fetchFromAPI = async (endpoint, opts) => {\n\n\n\n    console.log('Endpoint', endpoint)\n\n    const { method, body } = { method: 'POST', body: null, ...opts}\n\n    console.log('API', body)\n\n    const res = await fetch(`${API}/${endpoint}`,{\n        method,\n        ...(body && { body: JSON.stringify(body)}),\n        headers: {\n            'Content-Type': 'application/json',\n            \n        }\n\n    })\n\n   \n\n    console.log('RESPONEF API',res)\n\n    return res.json()\n\n}\n   \n\n//export {fetchFromAPI}\n","import React, {useState} from 'react'\nimport {  useStripe } from '@stripe/react-stripe-js'\nimport { useSelector } from 'react-redux'\nimport { fetchFromAPI }  from './StripeHelper'\nimport {Button, Form } from 'react-bootstrap'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport FormContainer from '../../components/FormContainer'\nimport CheckoutSteps from '../../components/CheckoutSteps'\n//import Stripe from 'stripe'\n//import { LinkContainer } from 'react-router-bootstrap'\n\n\nconst StripeCheckout = () => {\n\n  \n\n    const userLogin = useSelector(state => state.userLogin)\n\n    const { loading, error, userInfo } = userLogin\n\n\n   \n    const [email, setEmail] = useState('')\n\n       \n        const cart = useSelector((state) => state.cart)\n         const { cartItems } = cart\n\n         console.log('CART STRIPE', cartItems)\n\n        const stripe = useStripe()\n\n        const checkoutHandler  = async (e) => {\n            e.preventDefault();\n\n            const line_items = cartItems.map(item => {\n            return {\n                quantity: item.qty,\n                price_data: {\n                currency: 'usd',\n                unit_amount: item.price * 100, // amount is in cents\n                product_data: {\n                    name: item.name,\n                    description: item.description,\n                    images: [item.image]\n                    //images:  '/Users/onesmusnyakotyo/ocart/frontend/public/images/airpods.jpg'\n                    \n                },\n                \n                }\n            }\n            });\n\n\n            console.log('LINEITEMS', line_items )\n       \n\n        const response = await fetchFromAPI('create-checkout-session', {\n             body: { line_items, customer_email: email },\n            });\n\n            console.log('RESPONSE', response )\n\n\n        const { sessionId } = response;\n\n           console.log('SESSIONID', sessionId )\n\n        const { error } = await stripe.redirectToCheckout({\n             sessionId\n            });\n\n         if(error) {\n            console.log(error);\n            }\n\n\n         \n        }\n\n    return (\n        <>\n            <FormContainer>\n\n               <CheckoutSteps step1 step2 step3 step4 />\n\n               {error && <Message variant='danger'>{error}</Message>}\n               {loading && <Loader />}\n                   \n                <h4 className='text-center py-3 m-3'>Please Checkout Below</h4>\n                 \n                     \n\n                <Form  onSubmit={checkoutHandler}> \n                <Form.Group className='text-center'>\n  \n                    <Form.Control \n                        type=\"email\" \n                        placeholder=\"Email\"  \n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                        />\n                    <br />\n    \n                    <Button type='submit' variant='primary'>\n                            Checkout\n                    </Button>\n  \n                </Form.Group>\n                </Form>  \n            </FormContainer>\n            </>\n    )\n}\n\nexport default StripeCheckout\n\n\n","import React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Card, CardGroup, Button  } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { createOrder, getOrderDetails, payOrder } from '../../actions/orderActions'\n//import { CART_REMOVE_ALL_ITEMS }  from '../../constants/cartConstants'\n//import { ORDER_CREATE_RESET } from '../constants/orderConstants'\n//import { USER_DETAILS_RESET } from '../constants/userConstants'\n\nconst Success = ({history, location}) => {\n\n   const dispatch = useDispatch()\n\n  const cart = useSelector((state) => state.cart)\n\n  console.log('CART', cart)\n\n   //   Calculate prices\n  const addDecimals = (num) => {\n    return (Math.round(num * 100) / 100).toFixed(2)\n  }\n\n  cart.itemsPrice = addDecimals(\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n  )\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\n\n  cart.totalPrice = (\n    Number(cart.itemsPrice) +\n    Number(cart.shippingPrice) +\n    Number(cart.taxPrice)\n  ).toFixed(2)\n\n\n\n  // const orderDetails = useSelector((state) => state.orderDetails)\n  // const { order, loading, error } = orderDetails\n\n   const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  // const orderPay = useSelector((state) => state.orderPay)\n  // const { loading: loadingPay, success: successPay } = orderPay\n\n  // const orderDeliver = useSelector((state) => state.orderDeliver)\n  // const { loading: loadingDeliver, success: successDeliver } = orderDeliver\n\n\n   useEffect(() => {\n    if (!userInfo ) {\n       history.push('/login')\n    } \n  }, [history, userInfo])\n  \n  useEffect(() => {\n\n    if(!userInfo ) {\n      //&& cart.cartItems && cart.cartItems === 0\n      history.push('/login')\n    } else {    \n\n      dispatch(createOrder({\n        orderItems: cart.cartItems,\n        shippingAddress: cart.shippingAddress,\n        //paymentMethod: cart.paymentMethod,\n        paymentMethod: 'Stripe',\n        itemsPrice: cart.itemsPrice,\n        shippingPrice: cart.shippingPrice,\n        taxPrice: cart.taxPrice,\n        totalPrice: cart.totalPrice\n      }))\n\n      //dispatch({ type: CART_REMOVE_ALL_ITEMS })\n\n      // window.localStorage.removeItem( \"cartItems\") //remove one item   \n       //window.localStorage.removeItem(\"paymentMethod\") //remove one item  \n       //window.localStorage.removeItem( \"shippingAddress\") //remove one item   \n\n    }\n  }, [\n        history,\n        userInfo,\n        dispatch,\n        cart.cartItems,\n        cart.shippingAddress,\n        cart.paymentMethod,\n        cart.itemsPrice,\n        cart.shippingPrice,\n        cart.taxPrice,\n        cart.totalPrice\n  ])\n\n  //   const orderId = order._id\n\n  //   useEffect(() => {\n  //   if (!userInfo ) {\n  //      history.push('/login')\n  //   } else {\n  //     dispatch(getOrderDetails(orderId))\n  //     dispatch(payOrder(orderId))\n  //   }\n  // }, [history, userInfo, dispatch, orderId])\n      \n\n  \n\n    \n    \n  \n\n\n  \n\n \n    \n\n\n\n\n  return (\n    \n    <>\n    <CardGroup>\n                \n                <Card className=\"text-center\">\n                    <Card.Header as=\"h4\">Payment Successful</Card.Header>\n                \n                    <i className=\"fas fa-hand-holding-usd fa-lg py-3\" ></i>\n                    <Card.Body>\n                    <Card.Title>Thank you for your order</Card.Title>\n                    <Card.Text>\n                        We are currently processing your order and \n                        will send you a confirmation email shortly\n                    </Card.Text>\n                    <Card.Text>\n                       If you have any questions, please email {''}\n                          <a href=\"mailto:ocartorders@example.com\"><span style={{color: 'green'}}>ocartorders@example.com</span></a>\n                    </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                    <LinkContainer to='/'>\n                        <Button variant=\"primary\">Continue Shopping</Button>\n                    </LinkContainer>\n                    \n                    </Card.Footer>\n                </Card>\n            </CardGroup>\n        </>\n  );\n}\n\nexport default withRouter(Success);","import React, {useEffect} from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Card, CardGroup, Button  } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {useSelector } from 'react-redux'\n\n\nconst Canceled = ({history}) => {\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    if (!userInfo ) {\n       history.push('/login')\n    } \n  }, [history, userInfo])\n\n  return (\n    <>\n    <CardGroup>\n                \n                <Card className=\"text-center\">\n                    <Card.Header as=\"h4\">Payment Unsuccessful</Card.Header>\n                \n                    <i className=\"fas fa-hand-holding-usd fa-lg py-3\" ></i>\n                    <Card.Body>\n                    <Card.Title>Payment was not successful</Card.Title>\n                    <Card.Text>\n                        Please try again\n                    </Card.Text>\n                    </Card.Body>\n                    <Card.Footer>\n                    <LinkContainer to='/cart'>\n                        <Button variant=\"dark\">Try again to Checkout</Button>\n                    </LinkContainer>\n                    \n                    </Card.Footer>\n                </Card>\n            </CardGroup>\n        </>\n  );\n}\n\nexport default withRouter(Canceled);","import React from 'react'\nimport {Card, Button, Row, Col} from 'react-bootstrap'\nimport { LinkContainer} from 'react-router-bootstrap'\n\nconst SellingHow = () => {\n    return (\n        <>\n            \n             <Row className='mt-5'>\n                <Col className='text-center mt-5' >\n                    <h3 style={{color: 'green', fontWeight: 'bold'}}>Sell on Ocart</h3>\n                </Col>\n                <Col className='text-center mt-5' >\n                    <LinkContainer to='/selllerProductlist' className='btn btn-primary'>\n                    <Button variant='warning'>\n                        Start Selling\n                    </Button>\n                    \n                </LinkContainer>\n                </Col>\n            </Row>\n               \n                \n           \n\n            <h4 className='text-center mt-5' style={{color: 'orange', fontWeight: 'bold'}}>Reach new customers on Ocart, start now!</h4>\n\n            <Row >\n                <Col className='mt-4 mb-2' sm={12} md={6} lg={6}>\n                    <Card   border=\"primary\" >\n                        <Card.Header>How It Works</Card.Header>\n                            <Card.Body>\n                                <Card.Title> Card Title </Card.Title>\n                                <Card.Text >\n                                    Some quick example text to build on the card title and make up the bulk\n                                    of the card's content.\n                                </Card.Text>\n                            </Card.Body>\n                    </Card>\n                </Col>\n                <Col  className='mt-4 mb-2'sm={12} md={6} lg={6}>\n                    <Card border=\"primary\" >\n                        <Card.Header>How It Works</Card.Header>\n                            <Card.Body>\n                                <Card.Title> Card Title </Card.Title>\n                                <Card.Text >\n                                    Some quick example text to build on the card title and make up the bulk\n                                    of the card's content.\n                                </Card.Text>\n                            </Card.Body>\n                    </Card>\n                </Col>\n            \n                <Col className='mt-4 mb-4'  sm={12} md={6} lg={6}>\n                    <Card border=\"primary\" >\n                        <Card.Header>How It Works</Card.Header>\n                            <Card.Body>\n                                <Card.Title> Card Title </Card.Title>\n                                <Card.Text >\n                                    Some quick example text to build on the card title and make up the bulk\n                                    of the card's content.\n                                </Card.Text>\n                            </Card.Body>\n                    </Card>\n                </Col>\n                <Col  className='mt-4 mb-2' sm={12} md={6} lg={6}>\n                    <Card border=\"primary\" >\n                        <Card.Header>How It Works</Card.Header>\n                            <Card.Body>\n                                <Card.Title> Card Title </Card.Title>\n                                <Card.Text >\n                                    Some quick example text to build on the card title and make up the bulk\n                                    of the card's content.\n                                </Card.Text>\n                            </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n            \n            \n            \n\n    \n            \n        </>\n    )\n}\n\nexport default SellingHow\n","import React from 'react'\n\nconst FooterPrivacy = () => {\n    return (\n        <div>\n            Privacy\n        </div>\n    )\n}\n\nexport default FooterPrivacy\n","import React from 'react'\n\nconst FooterTerms = () => {\n    return (\n        <div>\n            Terms\n        </div>\n    )\n}\n\nexport default FooterTerms\n","import React from 'react'\n\nexport default () => {\n  return (\n    <div>\n      <h1 className=\"display-4\"> Page not Found</h1>\n      <p>Sorry, this page does not exist</p>\n    </div>\n  )\n}\n","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getUserDetails} from '../actions/userActions'\nimport { getOrderDetails} from '../actions/orderActions'\nimport { withRouter } from 'react-router-dom';\nimport {Container, Row, Col, ListGroup} from 'react-bootstrap'\n\n\n\n\n\nclass ShippingLabelsPages extends React.PureComponent {\n\n  \n\n   componentDidMount() {\n\n      const { match: { params } } = this.props\n\n     console.log('PARAMS',params._id)\n       if (params._id) {\n        this.props.getOrderDetails(params._id)\n\n    }\n    \n    \n   }\n\n   \n\n  render() {\n\n    const  orderDetails  = this.props.orderDetails\n    const { order} = orderDetails\n    const userDetails  = this.props.userDetails\n    const { user} = userDetails\n\n     //console.log('ORDER', orderDetails)\n    console.log('USER-DETAILS', orderDetails)\n    \n    \n    return (\n      <Container className='text-center'>\n     \n      <Row  >\n        <Col  className='text-center'>\n          {/* <ListGroup variant='flush'> */}\n            <ListGroup.Item>\n              <h5 className='mt-5 mb-4' style={{color: '#18bc9c'}} >Order {order.orderId}</h5>\n              <h5 className='mb-4' style={{color: '#18bc9c'}}> Shipping Address</h5>\n\n              <hr />\n              <p style={{fontWeight: 'bold', fontSize: 18}}>\n                {/* <strong>Name: </strong>  */}\n                {order.user.name}\n              </p>\n              {/* <p>\n                <strong>Email: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p> */}\n              \n                {/* <strong>Address:</strong> */}\n                <p>{order.shippingAddress.address}</p>\n                <p>{order.shippingAddress.city}</p>\n                <p>{order.shippingAddress.postalCode}</p>\n                <p>{order.shippingAddress.country}</p>\n             \n                \n              \n            </ListGroup.Item>\n           {/* </ListGroup> */}\n          </Col>\n        </Row>\n\n      \n      </Container>\n    )\n  }\n}\n\n\nShippingLabelsPages.propTypes = {\n  getUserDetails: PropTypes.func.isRequired,\n  orderDetails: PropTypes.object.isRequired,\n  userDetails: PropTypes.object.isRequired,\n\n};\n\nconst mapStateToProps = state => ({\n  orderDetails: state.orderDetails,\n  userDetails: state.userDetails,\n  \n})\n\nexport default connect(mapStateToProps, {getUserDetails, getOrderDetails})(withRouter(ShippingLabelsPages))\n\n\n\n\n\n\n// const ShippingLabelsPages = React.forwardRef((props, ref, match, history) => {\n\n//   console.log('history', ref)\n\n//   const userId = match.params.id\n\n  \n\n//   const dispatch = useDispatch()\n\n//    const userDetails = useSelector(state => state.userDetails)\n//   const { user} = userDetails\n\n//     const orderDetails = useSelector((state) => state.orderDetails)\n//   const { order, loading, error } = orderDetails\n\n//    const userLogin = useSelector(state => state.userLogin)\n\n//     const {userInfo} = userLogin\n\n\n//     useEffect(() => {\n//         if(!userInfo) {\n//             history.push('/login')\n//         } else {\n//             if (!user.name || user._id !== userId) {\n//                 dispatch(getUserDetails(userId))\n//             } else{\n               \n               \n//             }\n//         }\n//     }, [dispatch, history, userInfo, user, userId ])\n\n\n\n\n//     return (\n//       <Container>\n//         <table ref={ref}>\n//         <thead>\n//           <th>ID</th>\n//           <th>NAME</th>\n//           <th>EMAIL</th>\n//         </thead>\n//         <tbody>\n//           <tr>\n//             <td>{user._id}</td>\n//             <td>{user.name}</td>\n//             <td>{user.email}</td>\n//           </tr>\n//         </tbody>\n//       </table>\n//       </Container>\n//     )\n      \n//     }\n//     )\n\n//     export default ShippingLabelsPages\n\n\n","import React,{ useRef } from 'react';\n import { useReactToPrint } from 'react-to-print'\nimport ShippingLabelsPages from './ShippingLabelsPages'\n \n \n const ShippingLabels = () => {\n\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n\n    content: () => componentRef.current,\n     documentTitle: 'Ocart Online Shop',\n    pageStyle: `size: 302.36px 188.98px`,\n    \n  });\n\n\n\n\n\n  return (\n    <div className='text-center mt-3'>\n       \n       \n      \n        <div ref={componentRef} >\n            <ShippingLabelsPages ref={componentRef} />\n        </div> \n      <button  style={{borderRadius: 4, backgroundColor: 'orange', borderColor: 'orange', color: '#ffffff'}}\n        onClick={handlePrint} className='text-center mt-3'>\n        Print Label\n        </button>\n    </div>\n  )\n}\n\nexport default ShippingLabels","\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { getUserDetails} from '../actions/userActions'\nimport { getOrderDetails} from '../actions/orderActions'\nimport { withRouter } from 'react-router-dom';\nimport {Container, Row, Col, ListGroup, Card, Image} from 'react-bootstrap'\n\n\n\n\n\nclass ShippingReceipt extends React.PureComponent {\n\n\n   componentDidMount() {\n\n      const { match: { params } } = this.props\n\n     console.log('PARAMS',params._id)\n       if (params._id) {\n        this.props.getOrderDetails(params._id)\n\n    }\n    \n    \n   }\n\n   \n\n  render() {\n\n    const  orderDetails  = this.props.orderDetails\n    const { order} = orderDetails\n    const userDetails  = this.props.userDetails\n    const { user} = userDetails\n\n     //console.log('ORDER', orderDetails)\n    console.log('USER-DETAILS', orderDetails)\n\n\n   //   Calculate prices\n    const addDecimals = (num) => {\n      return (Math.round(num * 100) / 100).toFixed(2)\n    }\n\n   order.itemsPrice = addDecimals(\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\n    )\n  \n    \n    \n    return (\n      <Container className='text-center'>\n     \n      <Row  >\n        <Col  md={6} className='text-center'>\n          {/* <ListGroup variant='flush'> */}\n            <ListGroup.Item>\n              <h4 style={{ flexWrap: \"wrap\", color: '#18bc9c'}} className='mt-3 text-center' >Order {order.orderId}</h4>\n              <h2 className='mb-2'> Shipping Address</h2>\n\n              <hr />\n              <p style={{fontWeight: 'bold', fontSize: 18}}>\n                {/* <strong>Name: </strong>  */}\n                {order.user.name}\n              </p>\n              {/* <p>\n                <strong>Email: </strong>{' '}\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\n              </p> */}\n              \n                {/* <strong>Address:</strong> */}\n                <p>{order.shippingAddress.address}</p>\n                <p>{order.shippingAddress.city}</p>\n                <p>{order.shippingAddress.postalCode}</p>\n                <p>{order.shippingAddress.country}</p>\n             \n                \n              \n            </ListGroup.Item>\n            {/* </ListGroup> */}\n          </Col>\n\n          <Col md={6}>\n          <ListGroup.Item>\n              <h2>Payment Method</h2>\n              <p>\n                <strong>Method: </strong>\n                {order.paymentMethod}\n              </p>\n            </ListGroup.Item>\n\n            <ListGroup.Item>\n              <h2>Order Items</h2>\n             \n                <ListGroup variant='flush'>\n                  {order.orderItems.map((item, index) => (\n                    <ListGroup.Item key={index}>\n                      <Row>\n                        <Col>\n                        \n                            {item.name}\n                         \n                        </Col>\n                        <Col md={4}>\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              \n            </ListGroup.Item>\n          {/* </ListGroup> */}\n        </Col>\n        <Col md={12} className='mt-3'>\n          <Card>\n            <ListGroup variant='flush'>\n              <ListGroup.Item>\n                <h2>Order Summary</h2>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Items</Col>\n                  <Col>${order.itemsPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Shipping</Col>\n                  <Col>${order.shippingPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Tax</Col>\n                  <Col>${order.taxPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n              <ListGroup.Item>\n                <Row>\n                  <Col>Total</Col>\n                  <Col>${order.totalPrice}</Col>\n                </Row>\n              </ListGroup.Item>\n\n            </ListGroup>\n             </Card>\n            </Col>\n        </Row>\n\n      \n      </Container>\n    )\n  }\n}\n\n\nShippingReceipt.propTypes = {\n  getUserDetails: PropTypes.func.isRequired,\n  orderDetails: PropTypes.object.isRequired,\n  userDetails: PropTypes.object.isRequired,\n\n};\n\nconst mapStateToProps = state => ({\n  orderDetails: state.orderDetails,\n  userDetails: state.userDetails,\n  \n})\n\nexport default connect(mapStateToProps, {getUserDetails, getOrderDetails})(withRouter(ShippingReceipt ))\n\n\n\n\n","import React,{ useRef } from 'react';\n import { useReactToPrint } from 'react-to-print'\nimport ShippingReceipt  from './ShippingReceipt'\n \n \n const ShippingReceiptDisplay = () => {\n\n  const componentRef = useRef();\n  const handlePrint = useReactToPrint({\n\n    content: () => componentRef.current,\n     documentTitle: 'Ocart Online Shop',\n    pageStyle: `size: 302.36px 188.98px`,\n    \n  });\n\n\n\n\n\n  return (\n    <div className='text-center mt-3'>\n       \n       \n      \n        <div ref={componentRef} >\n            <ShippingReceipt ref={componentRef} />\n        </div> \n      <button  style={{borderRadius: 4, backgroundColor: 'orange', borderColor: 'orange', color: '#ffffff'}}\n        onClick={handlePrint} className='text-center mt-3'>\n        Print Invoice\n        </button>\n    </div>\n  )\n}\n\nexport default ShippingReceiptDisplay","import React from 'react'\nimport { BrowserRouter as Router, Route} from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport OrderListScreen from './screens/OrderListScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport ProductInsertExcelScreen from './screens/ProductInsertExcelScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport SearchButtons from './components/SearchButtons'\nimport SellerOrderListScreen from './screens/SellerOrderListScreen'\nimport SellRegisterScreen from './screens/SellRegisterScreen'\nimport SellerConfirmationScreen from './screens/SellerConfirmationScreen'\nimport SellerProductListScreen from './screens/SellerProductListScreen'\nimport SellerRegisterSuccess from './screens/SellerRegisterSuccess'\nimport StripeCheckout from './screens/CheckoutScreen/StripeCheckout'\nimport Success from './screens/CheckoutScreen/Success'\nimport Cancelled from './screens/CheckoutScreen/Cancelled'\nimport SellingHow from './screens/SellingHow'\nimport FooterPrivacy from './components/FooterPrivacy'\nimport FooterTerms from './components/FooterTerms'\nimport NotFound from './components/NotFound';\nimport ShippingLabels from './screens/ShippingLabels'\nimport ShippingReceiptDisplay from './screens/ShippingReceiptDisplay'\n\n\n\n\n\n const App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className= 'py-3' style={{paddingLeft: 4, paddingRight: 4}}>\n        <Container>\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/order/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/productInsertExcel' component={ProductInsertExcelScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/searchButton' component={SearchButtons} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n           <Route path='/sellerRegister' component={SellRegisterScreen} />\n           <Route path='/admin/user/:id/sellerConfirmation' component={SellerConfirmationScreen} />\n           <Route path='/sellerRegisterRequest' component={SellerRegisterSuccess} />\n           <Route path='/shippingLabels/:_id' component={ShippingLabels} />\n           <Route path='/shipping-receipt/:_id' component={ShippingReceiptDisplay} />\n            <Route path='/sellingHow' component={SellingHow} />\n            <Route path='/privacy' component={FooterPrivacy} />\n            <Route path='/terms' component={FooterTerms} />\n            <Route exact path=\"/not-found\" component={NotFound} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n\n          <Route path='/sellerOrders' component={SellerOrderListScreen} />\n          \n        \n          <Route\n            path='/selllerProductlist'\n            component={SellerProductListScreen}\n            exact\n          />\n           {/* <Route\n            path='/seller/productlist/:pageNumber'\n            component={SellerProductListScreen}\n            exact\n          /> */}\n          \n           \n           <Route path='/checkout' component={StripeCheckout} />\n            <Route path='/success' component={Success} />\n            <Route path='/cancelled' component={Cancelled} />\n        </Container>\n       \n      </main>\n      \n       <Footer />\n\n    </Router>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport  { productListSellerReducer, productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer   }  from './reducers/productReducers.js'\nimport { cartReducer } from './reducers/cartReducers'\nimport {userDetailsSellerReducer, sellerConfirmationReducer, userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer, sellerRegisterReducer } from './reducers/userReducers'\nimport { sellerOrderListReducer, orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n\tuserLogin: userLoginReducer,\n\tuserRegister: userRegisterReducer,\n\tuserDetails: userDetailsReducer,\n\tuserUpdateProfile: userUpdateProfileReducer,\n\tuserList: userListReducer,\n\tuserDelete: userDeleteReducer,\n\tuserUpdate: userUpdateReducer,\n\tproductDelete: productDeleteReducer,\n\tproductCreate: productCreateReducer,\n\tproductUpdate: productUpdateReducer,\n\torderCreate: orderCreateReducer,\n\torderDetails: orderDetailsReducer,\n\torderPay: orderPayReducer,\n\torderListMy: orderListMyReducer,\n\torderList: orderListReducer,\n\tsellerOrderList: sellerOrderListReducer,\n\torderDeliver: orderDeliverReducer,\n\tproductReviewCreate: productReviewCreateReducer ,\n\tproductTopRated: productTopRatedReducer,\n\tsellerRegister: sellerRegisterReducer,\n\tsellerConfirmation: sellerConfirmationReducer,\n\tproductListSeller: productListSellerReducer,\n\tuserDetailsSeller: userDetailsSellerReducer\n})\n\n\n// RETREIVING ITEMS FROM STORAGE\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\n\n// RETREIVING USER FROM STORAGE\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n\t? JSON.parse(localStorage.getItem('userInfo'))\n\t: null\n\n// RETREIVING USER FROM STORAGE\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\n// INITIAL STATE\nconst initialState = {\n\tcart: {\n\t\tcartItems: cartItemsFromStorage,\n\t\tshippingAddress: shippingAddressFromStorage,\n\t},\n\tuserLogin: {\n\t\tuserInfo: userInfoFromStorage,\n\t},\n\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import { PRODUCT_LIST_REQUEST, \n    PRODUCT_LIST_SUCCESS, \n    PRODUCT_LIST_FAIL,\n    SELLER_PRODUCT_LIST_SUCCESS, \n    SELLER_PRODUCT_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    PRODUCT_DELETE_REQUEST,\n    PRODUCT_DELETE_SUCCESS,\n    PRODUCT_DELETE_FAIL,\n    PRODUCT_CREATE_REQUEST,\n    PRODUCT_CREATE_SUCCESS,\n    PRODUCT_CREATE_FAIL,\n    PRODUCT_CREATE_RESET,\n    PRODUCT_UPDATE_REQUEST,\n    PRODUCT_UPDATE_SUCCESS,\n    PRODUCT_UPDATE_FAIL,\n    PRODUCT_UPDATE_RESET,\n    PRODUCT_CREATE_REVIEW_REQUEST,\n    PRODUCT_CREATE_REVIEW_SUCCESS,\n    PRODUCT_CREATE_REVIEW_FAIL,\n    PRODUCT_CREATE_REVIEW_RESET,\n    PRODUCT_TOP_REQUEST,\n    PRODUCT_TOP_SUCCESS,\n    PRODUCT_TOP_FAIL,\n    SELLER_PRODUCT_LIST_REQUEST} \n    from '../constants/productConstants'\n\nexport const productListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCT_LIST_REQUEST:\n            return { loading: true, products: [] }\n        case PRODUCT_LIST_SUCCESS:\n            return { loading: false, products: action.payload.products, pages: action.payload.pages, page: action.payload.page, }\n        case PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload}\n        default: \n            return state\n\n    }\n}\n\n\nexport const productListSellerReducer = (state = { sellerProducts: [] }, action) => {\n    switch (action.type) {\n        case SELLER_PRODUCT_LIST_REQUEST:\n            return { loading: true, sellerProducts: [] }\n        case SELLER_PRODUCT_LIST_SUCCESS:\n            return { loading: false, sellerProducts: action.payload.sellerProducts }\n        case SELLER_PRODUCT_LIST_FAIL:\n            return { loading: false, error: action.payload}\n        default: \n            return state\n\n    }\n}\n\nexport const productDetailsReducer = (state = { product: {reviews: []} }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return { loading: true, ...state }\n        case PRODUCT_DETAILS_SUCCESS:\n            return { loading: false, product: action.payload}\n        case PRODUCT_DETAILS_FAIL:\n            return { loading: false, error: action.payload}\n        default: \n            return state\n\n    }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_DELETE_REQUEST:\n            return { loading: true }\n        case PRODUCT_DELETE_SUCCESS:\n            return { loading: false, success: true}\n        case PRODUCT_DELETE_FAIL:\n            return { loading: false, error: action.payload}\n        default: \n            return state\n\n    }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n    switch (action.type) {\n        case PRODUCT_CREATE_REQUEST:\n            return { loading: true }\n        case PRODUCT_CREATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload}\n        case PRODUCT_CREATE_FAIL:\n            return { loading: false, error: action.payload}\n        case PRODUCT_CREATE_RESET: \n            return {}\n        default: \n            return state\n\n    }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_UPDATE_REQUEST:\n            return { loading: true }\n        case PRODUCT_UPDATE_SUCCESS:\n            return { loading: false, success: true, product: action.payload}\n        case PRODUCT_UPDATE_FAIL:\n            return { loading: false, error: action.payload}\n        case PRODUCT_UPDATE_RESET: \n            return { product: {}}\n        default: \n            return state\n\n    }\n}\n\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","\nimport { CART_REMOVE_ALL_ITEMS, CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_PAYMENT_METHOD, CART_SAVE_SHIPPING_ADDRESS } from '../constants/cartConstants'\n\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\n    switch(action.type) {\n        case CART_ADD_ITEM:\n        const item = action.payload\n\n        const existItem = state.cartItems.find(x => x.product === item.product)\n\n            if(existItem) {\n                return {\n                    ...state,\n                cartItems: state.cartItems.map(x => x.product === existItem.product ? item : x )\n                }\n                \n            } else {\n                return {\n                    ...state,\n                    cartItems: [...state.cartItems, item]\n                }\n            }\n            \n        case CART_REMOVE_ITEM:\n            return {\n            ...state,\n            cartItems: state.cartItems.filter((x) => x.product !== action.payload),\n      }\n\n        case CART_REMOVE_ALL_ITEMS:\n            return {\n            ...state,\n            cartItems: state.cartItems.filter((x) => x.product === action.payload),\n      }\n\t\t\n\t\t\n        \n        case CART_SAVE_SHIPPING_ADDRESS: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tshippingAddress: action.payload\n\t\t\t\t\n\t\t\t}\n\n            case CART_SAVE_PAYMENT_METHOD: \n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpaymentMethod: action.payload\n\t\t\t\t\n\t\t\t}\n\t\t\n          default: return state\n    }\n}","import { USER_DETAILS_FAIL, USER_LIST_RESET, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_RESET, USER_UPDATE_PROFILE_SUCCESS, USER_DELETE_REQUEST, USER_DELETE_SUCCESS, USER_DELETE_FAIL,\n  USER_UPDATE_REQUEST, USER_UPDATE_SUCCESS, USER_UPDATE_FAIL, USER_UPDATE_RESET, SELLER_REGISTER_REQUEST, SELLER_REGISTER_SUCCESS, SELLER_REGISTER_FAIL, SELLER_CONFIRMATION_REQUEST, SELLER_CONFIRMATION_SUCCESS, SELLER_CONFIRMATION_FAIL, USER_DETAILS_SELLER_REQUEST, USER_DETAILS_SELLER_SUCCESS, USER_DETAILS_SELLER_FAIL, USER_DETAILS_SELLER_RESET\n\n} from \"../constants/userConstants\"\n\n\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return { loading: true }\n        case USER_LOGIN_SUCCESS:\n            return { loading: false, userInfo: action.payload}\n        case USER_LOGIN_FAIL:\n            return { loading: false, error: action.payload}\n        case USER_LOGOUT:\n            return {}\n        default: \n            return state\n\n    }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return { loading: true }\n        case USER_REGISTER_SUCCESS:\n            return { loading: false, userInfo: action.payload}\n        case USER_REGISTER_FAIL:\n            return { loading: false, error: action.payload}\n        default: \n            return state\n\n    }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_REQUEST:\n            return { ...state , loading: true }\n        case USER_DETAILS_SUCCESS:\n            return { loading: false, user: action.payload}\n        case USER_DETAILS_FAIL:\n            return { loading: false, error: action.payload}\n        case USER_DETAILS_RESET:\n            return { user: {} }\n        default: \n            return state\n\n    }\n}\n\n\n\nexport const userUpdateProfileReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_UPDATE_PROFILE_REQUEST:\n            return { loading: true }\n        case USER_UPDATE_PROFILE_SUCCESS:\n            return { loading: false, success: true, userInfo: action.payload}\n        case USER_UPDATE_PROFILE_FAIL:\n            return { loading: false, error: action.payload}\n        case USER_UPDATE_PROFILE_RESET:\n            return {}\n        default: \n            return state\n\n    }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\n// export const userUpdateReducer = (state = { user: {} }, action) => {\n//   switch (action.type) {\n//     case USER_UPDATE_PROFILE_REQUEST:\n//       return { loading: true }\n//     case USER_UPDATE_PROFILE_SUCCESS:\n//       return { loading: false, success: true }\n//     case USER_UPDATE_PROFILE_FAIL:\n//       return { loading: false, error: action.payload }\n//     case USER_UPDATE_PROFILE_RESET:\n//       return {\n//         user: {},\n//       }\n//     default:\n//       return state\n//   }\n// }\n\n     \n\n      \n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true };\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true };\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload };\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      };\n    default:\n      return state;\n  }\n};\n\nexport const sellerRegisterReducer = (state = {user: {} }, action) => {\n  switch (action.type) {\n    case SELLER_REGISTER_REQUEST:\n      return {\n        loading: true,\n      }\n    case SELLER_REGISTER_SUCCESS:\n      return {\n        loading: false,\n        success: true ,\n        user: action.payload,\n      }\n    case SELLER_REGISTER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const sellerConfirmationReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case SELLER_CONFIRMATION_REQUEST:\n      return {\n        loading: true,\n      }\n    case SELLER_CONFIRMATION_SUCCESS:\n      return {\n        loading: false,\n        user: action.payload,\n      }\n    case SELLER_CONFIRMATION_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const userDetailsSellerReducer = (state = { user: {} }, action) => {\n    switch (action.type) {\n        case USER_DETAILS_SELLER_REQUEST:\n            return { ...state , loading: true }\n        case USER_DETAILS_SELLER_SUCCESS:\n            return { loading: false, user: action.payload}\n        case USER_DETAILS_SELLER_FAIL:\n            return { loading: false, error: action.payload}\n        case USER_DETAILS_SELLER_RESET:\n            return { user: {} }\n        default: \n            return state\n\n    }\n}\n\n","import {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_REQUEST,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_FAIL,\n  ORDER_PAY_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_RESET,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_MY_RESET,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  SELLER_PLACED_ORDER_LIST_SUCCESS,\n  SELLER_PLACED_ORDER_LIST_REQUEST,\n  SELLER_PLACED_ORDER_LIST_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n  ORDER_DELIVER_RESET,\n  ORDER_CREATE_RESET,\n  SELLER_ORDER_LIST_REQUEST,\n  SELLER_ORDER_LIST_SUCCESS,\n  SELLER_ORDER_LIST_FAIL,\n} from '../constants/orderConstants'\n\nexport const orderCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_CREATE_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_CREATE_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n        order: action.payload,\n      }\n    case ORDER_CREATE_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDetailsReducer = (\n  state = { loading: true, orderItems: [], shippingAddress: {} },\n  action\n) => {\n  switch (action.type) {\n    case ORDER_DETAILS_REQUEST:\n      return {\n        ...state,\n        loading: true,\n      }\n    case ORDER_DETAILS_SUCCESS:\n      return {\n        loading: false,\n        order: action.payload,\n      }\n    case ORDER_DETAILS_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const orderPayReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_PAY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_PAY_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_PAY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_PAY_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderDeliverReducer = (state = {}, action) => {\n  switch (action.type) {\n    case ORDER_DELIVER_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_DELIVER_SUCCESS:\n      return {\n        loading: false,\n        success: true,\n      }\n    case ORDER_DELIVER_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_DELIVER_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_MY_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_MY_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_MY_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    case ORDER_LIST_MY_RESET:\n      return { orders: [] }\n    default:\n      return state\n  }\n}\n\nexport const orderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\nexport const sellerOrderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case SELLER_ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case SELLER_ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case SELLER_ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}\n\n\nexport const sellerPlacedorderListReducer = (state = { orders: [] }, action) => {\n  switch (action.type) {\n    case SELLER_PLACED_ORDER_LIST_REQUEST:\n      return {\n        loading: true,\n      }\n    case SELLER_PLACED_ORDER_LIST_SUCCESS:\n      return {\n        loading: false,\n        orders: action.payload,\n      }\n    case SELLER_PLACED_ORDER_LIST_FAIL:\n      return {\n        loading: false,\n        error: action.payload,\n      }\n    default:\n      return state\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.flaty.css'\n//import './bootstrap.min.css'\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider }  from 'react-redux'\nimport { Elements } from '@stripe/react-stripe-js'\nimport { loadStripe } from '@stripe/stripe-js'\nimport store from './store'\n\n\n\n\nconst stripePromise = loadStripe('pk_test_FQ6MNjx0p8vsvmT2vdVePuJ100HQ1ZkxvE')\n\n\nReactDOM.render(\n  <Provider store={store}>\n     <Elements stripe={stripePromise}>\n      <App />\n    </Elements>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}