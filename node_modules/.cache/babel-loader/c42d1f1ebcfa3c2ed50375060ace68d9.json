{"ast":null,"code":"var _jsxFileName = \"/Users/onesmusnyakotyo/ocart/frontend/src/screens/PaymentScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Form, Button, Col } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutSteps from '../components/CheckoutSteps';\nimport { savePaymentMethod } from '../actions/cartActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PaymentScreen = ({\n  history\n}) => {\n  _s();\n\n  const cart = useSelector(state => state.cart);\n  const {\n    shippingAddress\n  } = cart;\n\n  if (!shippingAddress) {\n    history.push('/shipping');\n  } //const [paymentMethod, setPaymentMethod ] = useState('PayPal')\n\n\n  const [stripePaymentMethod, setStripePaymentMethod] = useState('');\n  const dispatch = useDispatch(); // if(stripePaymentMethod) {\n  //   const submitHandler = (e) => {\n  //   e.preventDefault()\n  //   dispatch(savePaymentMethod(stripePaymentMethod))\n  //   history.push('/placeorder')\n  // }\n  // } else {\n  //   const submitHandler = (e) => {\n  //   e.preventDefault()\n  //   dispatch(savePaymentMethod(paymentMethod))\n  //   history.push('/placeorder')\n  // }\n  // }\n\n  const submitHandler = e => {\n    e.preventDefault(); //dispatch(savePaymentMethod(paymentMethod))\n\n    dispatch(savePaymentMethod(stripePaymentMethod)); //history.push('/placeorder')\n\n    history.push('/checkout');\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n      step1: true,\n      step2: true,\n      step3: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Payment Method\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          as: \"legend\",\n          children: \"Select Method\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Form.Check, {\n            type: \"radio\",\n            label: \"Stripe\",\n            id: \"Stripe\",\n            name: \"stripePaymentMethod\",\n            required: true,\n            onChange: e => setStripePaymentMethod(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"primary\",\n        children: \"Continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PaymentScreen, \"2Os2GLBjrnSB5qXTDMo133wAVp0=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = PaymentScreen;\nexport default PaymentScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentScreen\");","map":{"version":3,"sources":["/Users/onesmusnyakotyo/ocart/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","history","cart","state","shippingAddress","push","stripePaymentMethod","setStripePaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,GAAvB,QAAkC,iBAAlC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,iBAAT,QAAkC,wBAAlC;;;AAGA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AACrC,QAAMC,IAAI,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACD,IAAlB,CAAxB;AACA,QAAM;AAAEE,IAAAA;AAAF,MAAsBF,IAA5B;;AAEA,MAAG,CAACE,eAAJ,EAAoB;AAChBH,IAAAA,OAAO,CAACI,IAAR,CAAa,WAAb;AACH,GANoC,CAQrC;;;AAEC,QAAM,CAACC,mBAAD,EAAsBC,sBAAtB,IAAiDhB,QAAQ,CAAC,EAAD,CAA/D;AAID,QAAMiB,QAAQ,GAAGb,WAAW,EAA5B,CAdqC,CAgBrC;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;;AAEE,QAAMc,aAAa,GAAIC,CAAD,IAAO;AAC7BA,IAAAA,CAAC,CAACC,cAAF,GAD6B,CAE7B;;AACAH,IAAAA,QAAQ,CAACT,iBAAiB,CAACO,mBAAD,CAAlB,CAAR,CAH6B,CAI5B;;AACDL,IAAAA,OAAO,CAACI,IAAR,CAAa,WAAb;AAEC,GAPD;;AAUF,sBACE,QAAC,aAAD;AAAA,4BACE,QAAC,aAAD;AAAe,MAAA,KAAK,MAApB;AAAqB,MAAA,KAAK,MAA1B;AAA2B,MAAA,KAAK;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,IAAD;AAAM,MAAA,QAAQ,EAAEI,aAAhB;AAAA,8BACE,QAAC,IAAD,CAAM,KAAN;AAAA,gCACE,QAAC,IAAD,CAAM,KAAN;AAAY,UAAA,EAAE,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAGA,QAAC,GAAD;AAAA,iCAYK,QAAC,IAAD,CAAM,KAAN;AACI,YAAA,IAAI,EAAE,OADV;AAEI,YAAA,KAAK,EAAC,QAFV;AAGI,YAAA,EAAE,EAAC,QAHP;AAII,YAAA,IAAI,EAAC,qBAJT;AAKI,YAAA,QAAQ,EAAI,IALhB;AAMI,YAAA,QAAQ,EAAGC,CAAD,IAAOH,sBAAsB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV;AAN3C;AAAA;AAAA;AAAA;AAAA;AAZL;AAAA;AAAA;AAAA;AAAA,gBAHA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eA6BE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAC,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7BF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD,CAtFD;;GAAMb,a;UACSJ,W,EAaID,W;;;KAdbK,a;AAwFN,eAAeA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if(!shippingAddress){\n      history.push('/shipping')\n  }\n\n  //const [paymentMethod, setPaymentMethod ] = useState('PayPal')\n\n   const [stripePaymentMethod, setStripePaymentMethod ] = useState('')\n\n  \n  \n  const dispatch = useDispatch()\n\n  // if(stripePaymentMethod) {\n\n  //   const submitHandler = (e) => {\n  //   e.preventDefault()\n  //   dispatch(savePaymentMethod(stripePaymentMethod))\n  //   history.push('/placeorder')\n\n  // }\n\n  // } else {\n\n  //   const submitHandler = (e) => {\n  //   e.preventDefault()\n  //   dispatch(savePaymentMethod(paymentMethod))\n  //   history.push('/placeorder')\n  // }\n\n  // }\n\n    const submitHandler = (e) => {\n    e.preventDefault()\n    //dispatch(savePaymentMethod(paymentMethod))\n    dispatch(savePaymentMethod(stripePaymentMethod))\n     //history.push('/placeorder')\n    history.push('/checkout')\n\n    }\n\n  \n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3/>\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n        \n        <Col>\n            {/* <Form.Check\n                type= 'radio'\n                label='PayPal or Creadit Card'\n                id='PayPal'\n                name='paymentMethod'\n                value='PayPal'\n                checked\n                Change={(e) => setPaymentMethod(e.target.value)}\n            > \n            </Form.Check> */}\n\n             <Form.Check\n                 type= 'radio'\n                 label='Stripe'\n                 id='Stripe'\n                 name='stripePaymentMethod'\n                 required = {true}\n                 onChange={(e) => setStripePaymentMethod(e.target.value)}\n             > \n             </Form.Check>\n        </Col>\n\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n\n        </Form>\n     \n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen"]},"metadata":{},"sourceType":"module"}