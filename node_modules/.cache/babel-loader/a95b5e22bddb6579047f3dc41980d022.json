{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { productListSellerReducer, productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer } from './reducers/productReducers.js';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userDetailsSellerReducer, sellerConfirmationReducer, userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer, sellerRegisterReducer } from './reducers/userReducers';\nimport { sellerOrderListReducer, orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer,\n  sellerOrderList: sellerOrderListReducer,\n  orderDeliver: orderDeliverReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  sellerRegister: sellerRegisterReducer,\n  sellerConfirmation: sellerConfirmationReducer,\n  productListSeller: productListSellerReducer,\n  userDetailsSeller: userDetailsSellerReducer\n}); // RETREIVING ITEMS FROM STORAGE\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : []; // RETREIVING USER FROM STORAGE\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null; // RETREIVING USER FROM STORAGE\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {}; // INITIAL STATE\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["/Users/onesmusnyakotyo/ocart/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListSellerReducer","productListReducer","productDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","cartReducer","userDetailsSellerReducer","sellerConfirmationReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","sellerRegisterReducer","sellerOrderListReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetails","userUpdateProfile","userList","userDelete","userUpdate","productDelete","productCreate","productUpdate","orderCreate","orderDetails","orderPay","orderListMy","orderList","sellerOrderList","orderDeliver","productReviewCreate","productTopRated","sellerRegister","sellerConfirmation","productListSeller","userDetailsSeller","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"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","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport  { productListSellerReducer, productListReducer, productDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer   }  from './reducers/productReducers.js'\nimport { cartReducer } from './reducers/cartReducers'\nimport {userDetailsSellerReducer, sellerConfirmationReducer, userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer, sellerRegisterReducer } from './reducers/userReducers'\nimport { sellerOrderListReducer, orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers'\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n\tuserLogin: userLoginReducer,\n\tuserRegister: userRegisterReducer,\n\tuserDetails: userDetailsReducer,\n\tuserUpdateProfile: userUpdateProfileReducer,\n\tuserList: userListReducer,\n\tuserDelete: userDeleteReducer,\n\tuserUpdate: userUpdateReducer,\n\tproductDelete: productDeleteReducer,\n\tproductCreate: productCreateReducer,\n\tproductUpdate: productUpdateReducer,\n\torderCreate: orderCreateReducer,\n\torderDetails: orderDetailsReducer,\n\torderPay: orderPayReducer,\n\torderListMy: orderListMyReducer,\n\torderList: orderListReducer,\n\tsellerOrderList: sellerOrderListReducer,\n\torderDeliver: orderDeliverReducer,\n\tproductReviewCreate: productReviewCreateReducer ,\n\tproductTopRated: productTopRatedReducer,\n\tsellerRegister: sellerRegisterReducer,\n\tsellerConfirmation: sellerConfirmationReducer,\n\tproductListSeller: productListSellerReducer,\n\tuserDetailsSeller: userDetailsSellerReducer\n})\n\n\n// RETREIVING ITEMS FROM STORAGE\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\n  ? JSON.parse(localStorage.getItem('cartItems'))\n  : []\n\n\n// RETREIVING USER FROM STORAGE\nconst userInfoFromStorage = localStorage.getItem('userInfo')\n\t? JSON.parse(localStorage.getItem('userInfo'))\n\t: null\n\n// RETREIVING USER FROM STORAGE\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\n  : {}\n\n// INITIAL STATE\nconst initialState = {\n\tcart: {\n\t\tcartItems: cartItemsFromStorage,\n\t\tshippingAddress: shippingAddressFromStorage,\n\t},\n\tuserLogin: {\n\t\tuserInfo: userInfoFromStorage,\n\t},\n\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store"]},"metadata":{},"sourceType":"module"}