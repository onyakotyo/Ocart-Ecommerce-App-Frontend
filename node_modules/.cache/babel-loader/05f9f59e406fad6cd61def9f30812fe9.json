{"ast":null,"code":"import _regeneratorRuntime from\"/Users/onesmusnyakotyo/ocart/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"/Users/onesmusnyakotyo/ocart/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"/Users/onesmusnyakotyo/ocart/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";var API='http://localhost:5000';export var fetchFromAPI=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(endpoint,opts){var _method$body$opts,method,body,res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:console.log('Endpoint',endpoint);_method$body$opts=_objectSpread({method:'POST',body:null},opts),method=_method$body$opts.method,body=_method$body$opts.body;console.log('API',body);_context.next=5;return fetch(\"\".concat(API,\"/\").concat(endpoint),_objectSpread(_objectSpread({method:method},body&&{body:JSON.stringify(body)}),{},{headers:{'Content-Type':'application/json'}}));case 5:res=_context.sent;console.log('RESPONEF API',res);return _context.abrupt(\"return\",res.json());case 8:case\"end\":return _context.stop();}}},_callee);}));return function fetchFromAPI(_x,_x2){return _ref.apply(this,arguments);};}();//export {fetchFromAPI}","map":{"version":3,"sources":["/Users/onesmusnyakotyo/ocart/frontend/src/screens/CheckoutScreen/StripeHelper.js"],"names":["API","fetchFromAPI","endpoint","opts","console","log","method","body","fetch","JSON","stringify","headers","res","json"],"mappings":"gdAOA,GAAMA,CAAAA,GAAG,CAAG,uBAAZ,CAEA,MAAO,IAAMC,CAAAA,YAAY,0FAAG,iBAAOC,QAAP,CAAiBC,IAAjB,wJAIxBC,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAwBH,QAAxB,EAJwB,iCAMGI,MAAM,CAAE,MANX,CAMmBC,IAAI,CAAE,IANzB,EAMkCJ,IANlC,EAMhBG,MANgB,mBAMhBA,MANgB,CAMRC,IANQ,mBAMRA,IANQ,CAQxBH,OAAO,CAACC,GAAR,CAAY,KAAZ,CAAmBE,IAAnB,EARwB,sBAUNC,CAAAA,KAAK,WAAIR,GAAJ,aAAWE,QAAX,+BACnBI,MAAM,CAANA,MADmB,EAEfC,IAAI,EAAI,CAAEA,IAAI,CAAEE,IAAI,CAACC,SAAL,CAAeH,IAAf,CAAR,CAFO,MAGnBI,OAAO,CAAE,CACL,eAAgB,kBADX,CAHU,GAVC,QAUlBC,GAVkB,eAsBxBR,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA2BO,GAA3B,EAtBwB,gCAwBjBA,GAAG,CAACC,IAAJ,EAxBiB,wDAAH,kBAAZZ,CAAAA,YAAY,gDAAlB,CA6BP","sourcesContent":["\n\n\n\n\n\n\nconst API = 'http://localhost:5000';\n\nexport const fetchFromAPI = async (endpoint, opts) => {\n\n\n\n    console.log('Endpoint', endpoint)\n\n    const { method, body } = { method: 'POST', body: null, ...opts}\n\n    console.log('API', body)\n\n    const res = await fetch(`${API}/${endpoint}`,{\n        method,\n        ...(body && { body: JSON.stringify(body)}),\n        headers: {\n            'Content-Type': 'application/json',\n            \n        }\n\n    })\n\n   \n\n    console.log('RESPONEF API',res)\n\n    return res.json()\n\n}\n   \n\n//export {fetchFromAPI}\n"]},"metadata":{},"sourceType":"module"}