{"ast":null,"code":"var _jsxFileName = \"/Users/onesmusnyakotyo/ocart/frontend/src/screens/CheckoutScreen/StripeCheckout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useStripe } from '@stripe/react-stripe-js';\nimport { useSelector } from 'react-redux';\nimport { fetchFromAPI } from './StripeHelper';\nimport { Button, Form } from 'react-bootstrap';\nimport Loader from '../../components/Loader';\nimport Message from '../../components/Message';\nimport FormContainer from '../../components/FormContainer';\nimport CheckoutSteps from '../../components/CheckoutSteps'; //import Stripe from 'stripe'\n//import { LinkContainer } from 'react-router-bootstrap'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst StripeCheckout = () => {\n  _s();\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin;\n  const [email, setEmail] = useState('');\n  const cart = useSelector(state => state.cart);\n  const {\n    cartItems\n  } = cart;\n  console.log('CART STRIPE', cartItems);\n  const stripe = useStripe();\n\n  const checkoutHandler = async e => {\n    e.preventDefault();\n    const line_items = cartItems.map(item => {\n      return {\n        quantity: item.qty,\n        price_data: {\n          currency: 'usd',\n          unit_amount: item.price * 100,\n          // amount is in cents\n          product_data: {\n            name: item.name,\n            description: item.description,\n            images: [item.image] //images:  '/Users/onesmusnyakotyo/ocart/frontend/public/images/airpods.jpg'\n\n          }\n        }\n      };\n    });\n    console.log('LINEITEMS', line_items);\n    const response = await fetchFromAPI('create-checkout-session', {\n      body: {\n        line_items,\n        customer_email: email\n      }\n    });\n    console.log('RESPONSE', response);\n    const {\n      sessionId\n    } = response;\n    console.log('SESSIONID', sessionId);\n    const {\n      error\n    } = await stripe.redirectToCheckout({\n      sessionId\n    });\n\n    if (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(CheckoutSteps, {\n        step1: true,\n        step2: true,\n        step3: true,\n        step4: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 16\n      }, this), error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 26\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        className: \"text-center py-3 m-3\",\n        children: \"Please Checkout Below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: checkoutHandler,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"Email\",\n            value: email,\n            required: true,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Checkout\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(StripeCheckout, \"OUrW1m1yQ7XLE7raNgBI/7QuLuQ=\", false, function () {\n  return [useSelector, useSelector, useStripe];\n});\n\n_c = StripeCheckout;\nexport default StripeCheckout;\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckout\");","map":{"version":3,"sources":["/Users/onesmusnyakotyo/ocart/frontend/src/screens/CheckoutScreen/StripeCheckout.js"],"names":["React","useState","useStripe","useSelector","fetchFromAPI","Button","Form","Loader","Message","FormContainer","CheckoutSteps","StripeCheckout","userLogin","state","loading","error","userInfo","email","setEmail","cart","cartItems","console","log","stripe","checkoutHandler","e","preventDefault","line_items","map","item","quantity","qty","price_data","currency","unit_amount","price","product_data","name","description","images","image","response","body","customer_email","sessionId","redirectToCheckout","target","value"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport {  useStripe } from '@stripe/react-stripe-js'\nimport { useSelector } from 'react-redux'\nimport { fetchFromAPI }  from './StripeHelper'\nimport {Button, Form } from 'react-bootstrap'\nimport Loader from '../../components/Loader'\nimport Message from '../../components/Message'\nimport FormContainer from '../../components/FormContainer'\nimport CheckoutSteps from '../../components/CheckoutSteps'\n//import Stripe from 'stripe'\n//import { LinkContainer } from 'react-router-bootstrap'\n\n\nconst StripeCheckout = () => {\n\n  \n\n    const userLogin = useSelector(state => state.userLogin)\n\n    const { loading, error, userInfo } = userLogin\n\n\n   \n    const [email, setEmail] = useState('')\n\n       \n        const cart = useSelector((state) => state.cart)\n         const { cartItems } = cart\n\n         console.log('CART STRIPE', cartItems)\n\n        const stripe = useStripe()\n\n        const checkoutHandler  = async (e) => {\n            e.preventDefault();\n\n            const line_items = cartItems.map(item => {\n            return {\n                quantity: item.qty,\n                price_data: {\n                currency: 'usd',\n                unit_amount: item.price * 100, // amount is in cents\n                product_data: {\n                    name: item.name,\n                    description: item.description,\n                    images: [item.image]\n                    //images:  '/Users/onesmusnyakotyo/ocart/frontend/public/images/airpods.jpg'\n                    \n                },\n                \n                }\n            }\n            });\n\n\n            console.log('LINEITEMS', line_items )\n       \n\n        const response = await fetchFromAPI('create-checkout-session', {\n             body: { line_items, customer_email: email },\n            });\n\n            console.log('RESPONSE', response )\n\n\n        const { sessionId } = response;\n\n           console.log('SESSIONID', sessionId )\n\n        const { error } = await stripe.redirectToCheckout({\n             sessionId\n            });\n\n         if(error) {\n            console.log(error);\n            }\n\n\n         \n        }\n\n    return (\n        <>\n            <FormContainer>\n\n               <CheckoutSteps step1 step2 step3 step4 />\n\n               {error && <Message variant='danger'>{error}</Message>}\n               {loading && <Loader />}\n                   \n                <h4 className='text-center py-3 m-3'>Please Checkout Below</h4>\n                 \n                     \n\n                <Form  onSubmit={checkoutHandler}> \n                <Form.Group className='text-center'>\n  \n                    <Form.Control \n                        type=\"email\" \n                        placeholder=\"Email\"  \n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                        />\n                    <br />\n    \n                    <Button type='submit' variant='primary'>\n                            Checkout\n                    </Button>\n  \n                </Form.Group>\n                </Form>  \n            </FormContainer>\n            </>\n    )\n}\n\nexport default StripeCheckout\n\n\n"]},"metadata":{},"sourceType":"module"}