{"ast":null,"code":"var _jsxFileName = \"/Users/onesmusnyakotyo/ocart/frontend/src/screens/ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap';\nimport Rating from '../components/Rating';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Meta from '../components/Meta';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  var _product$images, _product$images2;\n\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  console.log('PRODUCT DETAILS', product); //product.images.map(xx => console.log('IMAGES',xx))\n  //console.log('PI',product.images)\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview\n  } = productReviewCreate; //!product._id || product._id !==\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0);\n      setComment('');\n    }\n\n    if (match.params.id) {\n      dispatch(listProductDetails(match.params.id));\n      dispatch({\n        type: PRODUCT_CREATE_REVIEW_RESET\n      });\n    }\n  }, [dispatch, match, successProductReview]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(createProductReview(match.params.id, {\n      rating,\n      comment\n    }));\n  };\n\n  const [indexx, setIndex] = useState(0);\n  console.log('PRODUCT INDEXX', indexx); //  const setIndex = (index) => {\n  //  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-primary my-3\",\n      variant: \"success\",\n      to: \"/\",\n      children: \"Go Back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Meta, {\n        title: product.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: (_product$images = product.images) === null || _product$images === void 0 ? void 0 : _product$images.map((img, index) => /*#__PURE__*/_jsxDEV(Col, {\n            sm: 3,\n            xs: 3,\n            md: 3,\n            lg: 1,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              className: \"btn-light mb-2 border border-primary\",\n              onClick: () => setIndex(index),\n              children: /*#__PURE__*/_jsxDEV(Image, {\n                style: {\n                  height: '4rem',\n                  width: '4rem'\n                },\n                src: img,\n                alt: product.name,\n                rounded: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          md: 12,\n          lg: 12,\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            sm: 12,\n            xs: 12,\n            md: 6,\n            lg: 6,\n            style: {\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginBottom: 6\n            },\n            children: (_product$images2 = product.images) === null || _product$images2 === void 0 ? void 0 : _product$images2.map((img, index) => /*#__PURE__*/_jsxDEV(Col, {\n              sm: 12,\n              xs: 12,\n              md: 6,\n              lg: 6,\n              children: indexx === index && /*#__PURE__*/_jsxDEV(Col, {\n                md: 12,\n                children: /*#__PURE__*/_jsxDEV(Image, {\n                  style: {\n                    height: '30rem',\n                    width: '30rem'\n                  },\n                  src: img,\n                  alt: product.name,\n                  fluid: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 25\n                }, this)\n              }, indexx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 24\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            style: {\n              marginTop: 2\n            },\n            children: /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: product.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Rating, {\n                  value: product.rating,\n                  text: `${product.numReviews} reviews`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [\"Price: $\", product.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [\"Description: \", product.description]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), product.companyName && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [\"Sold by: \", product.companyName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 20\n              }, this), product.sellerName && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: [\"Country: \", product.countryName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(ListGroup, {\n                variant: \"flush\",\n                children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: \"Price:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [\"$\", product.price]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: \"Status:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 19\n                }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Row, {\n                    children: [/*#__PURE__*/_jsxDEV(Col, {\n                      children: \"Qty\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Col, {\n                      children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                        as: \"select\",\n                        value: qty,\n                        onChange: e => setQty(e.target.value),\n                        children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                          value: x + 1,\n                          children: x + 1\n                        }, x + 1, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 199,\n                          columnNumber: 33\n                        }, this))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: addToCartHandler,\n                    className: \"btn-block\",\n                    type: \"button\",\n                    disabled: product.countInStock === 0,\n                    children: \"Add To Cart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), product.reviews.length === 0 && /*#__PURE__*/_jsxDEV(Message, {\n            variant: \"success\",\n            children: \"No Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [product.reviews.map(review => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: review.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Rating, {\n                value: review.rating\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: review.createdAt.substring(0, 10)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: review.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 21\n              }, this)]\n            }, review._id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Write a Customer Review\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this), successProductReview && /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"success\",\n                children: \"Review submitted successfully\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 21\n              }, this), loadingProductReview && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 44\n              }, this), errorProductReview && /*#__PURE__*/_jsxDEV(Message, {\n                variant: \"danger\",\n                children: errorProductReview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 21\n              }, this), userInfo ? /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: submitHandler,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"rating\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Rating\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"select\",\n                    value: rating,\n                    onChange: e => setRating(e.target.value),\n                    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"\",\n                      children: \"Select...\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 259,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"1\",\n                      children: \"1 - Poor\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 260,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"2\",\n                      children: \"2 - Fair\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"3\",\n                      children: \"3 - Good\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 262,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"4\",\n                      children: \"4 - Very Good\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 263,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                      value: \"5\",\n                      children: \"5 - Excellent\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 264,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 254,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  controlId: \"comment\",\n                  className: \"mb-2\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    as: \"textarea\",\n                    row: \"3\",\n                    value: comment,\n                    onChange: e => setComment(e.target.value)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: loadingProductReview,\n                  type: \"submit\",\n                  variant: \"primary\",\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(Message, {\n                className: \"bg-success\",\n                variant: \"success\",\n                children: [\"Please \", /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  children: \"sign in\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 30\n                }, this), \" to write a review\", ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(ProductScreen, \"cY8fahl802zMEa6gOVtBHEJUICA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["/Users/onesmusnyakotyo/ocart/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Row","Col","Image","ListGroup","Card","Button","Form","Rating","Message","Loader","Meta","listProductDetails","createProductReview","PRODUCT_CREATE_REVIEW_RESET","ProductScreen","history","match","qty","setQty","rating","setRating","comment","setComment","dispatch","productDetails","state","loading","error","product","console","log","userLogin","userInfo","productReviewCreate","success","successProductReview","loadingProductReview","errorProductReview","params","id","type","addToCartHandler","push","submitHandler","e","preventDefault","indexx","setIndex","name","images","map","img","index","height","width","alignItems","justifyContent","marginBottom","marginTop","numReviews","price","description","companyName","sellerName","countryName","countInStock","target","value","Array","keys","x","reviews","length","review","createdAt","substring","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Row, Col, Image, ListGroup, Card, Button, Form} from 'react-bootstrap'\nimport Rating from '../components/Rating'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport Meta from '../components/Meta'\nimport {\n  listProductDetails,\n  createProductReview,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\n\nconst ProductScreen = ({ history, match }) => {\n  const [qty, setQty] = useState(1)\n  const [rating, setRating] = useState(0)\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  console.log('PRODUCT DETAILS',product)\n\n  //product.images.map(xx => console.log('IMAGES',xx))\n\n \n  //console.log('PI',product.images)\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const productReviewCreate = useSelector((state) => state.productReviewCreate)\n  const {\n    success: successProductReview,\n    loading: loadingProductReview,\n    error: errorProductReview,\n  } = productReviewCreate\n\n  //!product._id || product._id !==\n\n  useEffect(() => {\n    if (successProductReview) {\n      setRating(0)\n      setComment('')\n    }\n    if ( match.params.id) {\n      dispatch(listProductDetails(match.params.id))\n      dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\n    }\n  }, [dispatch, match, successProductReview, ])\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`)\n  }\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      createProductReview(match.params.id, {\n        rating,\n        comment,\n      })\n    )\n  }\n\n   \n\n   const [indexx, setIndex] = useState(0)\n\n   console.log('PRODUCT INDEXX',indexx)\n\n  //  const setIndex = (index) => {\n\n  //  }\n\n\n\n  return (\n    <>\n      <Link className='btn btn-primary my-3'  variant='success' to='/'>\n        Go Back\n      </Link>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Meta title={product.name} />\n          <Col>\n          <Row>\n          {product.images?.map((img, index) => \n          \n\n                  <Col sm={3} xs={3} md={3} lg={1} >\n                  \n                    \n                    <Button className='btn-light mb-2 border border-primary' \n                      onClick={() => setIndex(index)}\n                      >\n                        <Image style={{height: '4rem', width: '4rem' }} src={img} alt={product.name} rounded />\n                    </Button>\n                    \n                   \n                  </Col>\n             \n              \n              \n              )\n              }\n          </Row>\n          <Row md={12} lg={12}> \n          \n              <Col sm={12}  xs={12} md={6} lg={6} style={{alignItems: 'center', justifyContent: 'center', marginBottom: 6}}>\n                  {product.images?.map((img, index) => \n                <Col sm={12}  xs={12} md={6} lg={6} >\n                  {\n                      indexx === index && \n                      (<Col key={indexx} md={12}>\n                        <Image style={{height: '30rem', width: '30rem' }} src={img} alt={product.name} fluid/>\n                      </Col>)\n        \n                  }\n                  </Col>\n              )\n              }  \n\n             \n              </Col>\n          \n           \n         \n            <Col md={6} style={{marginTop: 2}}>\n              <ListGroup variant='flush'>\n                <ListGroup.Item>\n                  <h3>{product.name}</h3>\n                </ListGroup.Item>\n                <ListGroup.Item>\n                  <Rating\n                    value={product.rating}\n                    text={`${product.numReviews} reviews`}\n                  />\n                </ListGroup.Item>\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\n                <ListGroup.Item>\n                  Description: {product.description}\n                </ListGroup.Item>\n                {product.companyName && (\n                   <ListGroup.Item>\n                  Sold by: {product.companyName}\n                </ListGroup.Item>\n                )}\n                {product.sellerName && (\n                  <ListGroup.Item>\n                  Country: {product.countryName}\n                </ListGroup.Item>\n                 )}\n               \n                \n              </ListGroup>\n              \n            </Col>\n            <Col md={6} >\n              <Card>\n                <ListGroup variant='flush'>\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Price:</Col>\n                      <Col>\n                        <strong>${product.price}</strong>\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  <ListGroup.Item>\n                    <Row>\n                      <Col>Status:</Col>\n                      <Col>\n                        {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\n                      </Col>\n                    </Row>\n                  </ListGroup.Item>\n\n                  {product.countInStock > 0 && (\n                    <ListGroup.Item>\n                      <Row>\n                        <Col>Qty</Col>\n                        <Col>\n                          <Form.Control\n                            as='select'\n                            value={qty}\n                            onChange={(e) => setQty(e.target.value)}\n                          >\n                            {[...Array(product.countInStock).keys()].map(\n                              (x) => (\n                                <option key={x + 1} value={x + 1}>\n                                  {x + 1}\n                                </option>\n                              )\n                            )}\n                          </Form.Control>\n                        </Col>\n                      </Row>\n                    </ListGroup.Item>\n                  )}\n\n                  <ListGroup.Item>\n                    <Button\n                      onClick={addToCartHandler}\n                      className='btn-block'\n                      type='button'\n                      disabled={product.countInStock === 0}\n                    >\n                      Add To Cart\n                    </Button>\n                  </ListGroup.Item>\n                </ListGroup>\n              </Card>\n            </Col>\n          </Row>\n          </Col>\n          \n          <Row>\n            <Col md={6}>\n              <h2>Reviews</h2>\n              {product.reviews.length === 0 && <Message variant='success'>No Reviews</Message>}\n              <ListGroup variant='flush'>\n                {product.reviews.map((review) => (\n                  <ListGroup.Item key={review._id}>\n                    <strong>{review.name}</strong>\n                    <Rating value={review.rating} />\n                    <p>{review.createdAt.substring(0, 10)}</p>\n                    <p>{review.comment}</p>\n                  </ListGroup.Item>\n                ))}\n                <ListGroup.Item>\n                  <h2>Write a Customer Review</h2>\n                  {successProductReview && (\n                    <Message variant='success'>\n                      Review submitted successfully\n                    </Message>\n                  )}\n                  {loadingProductReview && <Loader />}\n                  {errorProductReview && (\n                    <Message variant='danger'>{errorProductReview}</Message>\n                  )}\n                  {userInfo ? (\n                    <Form onSubmit={submitHandler}>\n                      <Form.Group controlId='rating'>\n                        <Form.Label>Rating</Form.Label>\n                        <Form.Control\n                          as='select'\n                          value={rating}\n                          onChange={(e) => setRating(e.target.value)}\n                        >\n                          <option value=''>Select...</option>\n                          <option value='1'>1 - Poor</option>\n                          <option value='2'>2 - Fair</option>\n                          <option value='3'>3 - Good</option>\n                          <option value='4'>4 - Very Good</option>\n                          <option value='5'>5 - Excellent</option>\n                        </Form.Control>\n                      </Form.Group>\n                      <Form.Group controlId='comment' className='mb-2'>\n                        <Form.Label>Comment</Form.Label>\n                        <Form.Control\n                          as='textarea'\n                          row='3'\n                          value={comment}\n                          onChange={(e) => setComment(e.target.value)}\n                        ></Form.Control>\n                      </Form.Group>\n                      <Button\n                        disabled={loadingProductReview}\n                        type='submit'\n                        variant='primary'\n                      >\n                        Submit\n                      </Button>\n                    </Form>\n                  ) : (\n                    <Message className='bg-success' variant='success'> \n                      Please <Link to='/login'>sign in</Link> to write a review{' '}\n                    </Message>\n                  )}\n                </ListGroup.Item>\n              </ListGroup>\n            </Col>\n          </Row>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductScreen"]},"metadata":{},"sourceType":"module"}