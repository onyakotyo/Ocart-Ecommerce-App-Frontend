{"ast":null,"code":"import { USER_DETAILS_SELLER_REQUEST, USER_DETAILS_SELLER_SUCCESS, USER_DETAILS_SELLER_FAIL, SELLER_CONFIRMATION_FAIL, SELLER_CONFIRMATION_REQUEST, SELLER_CONFIRMATION_SUCCESS, SELLER_REGISTER_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_RESET, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DELETE_FAIL, USER_DELETE_SUCCESS, USER_DELETE_REQUEST, USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST, SELLER_REGISTER_FAIL, SELLER_REGISTER_SUCCESS } from \"../constants/userConstants\";\nimport axios from 'axios';\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAILS_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n};\nexport const register = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const saveSellerRegister = sellerRegister => async (dispatch, getState) => {\n  console.log('USER2', sellerRegister);\n\n  try {\n    dispatch({\n      type: SELLER_REGISTER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/sellerRegister`, sellerRegister, config);\n    console.log('USER REGISTER ACTION', data); //console.log('USER4', sellerRegister,)\n\n    dispatch({\n      type: SELLER_REGISTER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: SELLER_REGISTER_FAIL,\n      payload: message\n    });\n  }\n};\nexport const sellerConfirmationPost = (userId, sellerConfirmation) => async (dispatch, getState) => {\n  console.log('SELLER1', sellerConfirmation);\n\n  try {\n    dispatch({\n      type: SELLER_CONFIRMATION_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/sellerConfirm/${userId}`, sellerConfirmation, config);\n    console.log('ORDER3', data);\n    console.log('ORDER4', sellerConfirmation);\n    dispatch({\n      type: SELLER_CONFIRMATION_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: SELLER_CONFIRMATION_FAIL,\n      payload: message\n    });\n  }\n};\nexport const getUserDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config); //console.log('USER ACTION', data)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getUserSellerDetails = userId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_SELLER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/seller/${userId}`, config);\n    dispatch({\n      type: USER_DETAILS_SELLER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: USER_DETAILS_SELLER_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const updateUserProfile = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config);\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users`, config);\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteUser = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/users/${id}`, config);\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateUser = user => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config);\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: USER_DETAILS_RESET\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/onesmusnyakotyo/ocart/frontend/src/actions/userActions.js"],"names":["USER_DETAILS_SELLER_REQUEST","USER_DETAILS_SELLER_SUCCESS","USER_DETAILS_SELLER_FAIL","SELLER_CONFIRMATION_FAIL","SELLER_CONFIRMATION_REQUEST","SELLER_CONFIRMATION_SUCCESS","SELLER_REGISTER_REQUEST","USER_DETAILS_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_RESET","USER_DETAILS_SUCCESS","USER_LIST_RESET","USER_LIST_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_REGISTER_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_DELETE_FAIL","USER_DELETE_SUCCESS","USER_DELETE_REQUEST","USER_UPDATE_FAIL","USER_UPDATE_SUCCESS","USER_UPDATE_REQUEST","SELLER_REGISTER_FAIL","SELLER_REGISTER_SUCCESS","axios","ORDER_LIST_MY_RESET","login","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logout","removeItem","register","name","saveSellerRegister","sellerRegister","getState","console","log","userLogin","userInfo","Authorization","token","put","sellerConfirmationPost","userId","sellerConfirmation","getUserDetails","id","get","getUserSellerDetails","updateUserProfile","user","listUsers","deleteUser","delete","updateUser","_id"],"mappings":"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","sourcesContent":["import { USER_DETAILS_SELLER_REQUEST, USER_DETAILS_SELLER_SUCCESS, USER_DETAILS_SELLER_FAIL, SELLER_CONFIRMATION_FAIL, SELLER_CONFIRMATION_REQUEST, SELLER_CONFIRMATION_SUCCESS, SELLER_REGISTER_REQUEST, USER_DETAILS_FAIL, USER_DETAILS_REQUEST, USER_DETAILS_RESET, USER_DETAILS_SUCCESS, USER_LIST_RESET, USER_LIST_FAIL, USER_LIST_REQUEST, USER_LIST_SUCCESS, USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_REGISTER_FAIL, USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_UPDATE_PROFILE_FAIL, USER_UPDATE_PROFILE_REQUEST, USER_UPDATE_PROFILE_SUCCESS, USER_DELETE_FAIL, USER_DELETE_SUCCESS, USER_DELETE_REQUEST, USER_UPDATE_FAIL, USER_UPDATE_SUCCESS, USER_UPDATE_REQUEST, SELLER_REGISTER_FAIL, SELLER_REGISTER_SUCCESS } from \"../constants/userConstants\"\nimport axios from 'axios'\nimport { ORDER_LIST_MY_RESET } from \"../constants/orderConstants\"\n\nexport const login = (email, password ) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', {  email, password }, config)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data) )\n\n    } catch(error){\n        dispatch({\n                        type: USER_LOGIN_FAIL,\n                        payload: error.response && error.response.data.message ? \n                        error.response.data.message\n                        : error.message\n                    })\n    }\n\n    \n}\n\n\nexport const logout = () => (dispatch) => {\n        localStorage.removeItem('userInfo')\n        dispatch({type: USER_LOGOUT})\n        dispatch({type: USER_DETAILS_RESET})\n        dispatch({type: ORDER_LIST_MY_RESET})\n        dispatch({type: USER_LIST_RESET})\n    }\nexport const register = (name, email, password ) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_REGISTER_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users', { name, email, password }, config)\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n         dispatch({\n\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data) )\n\n    } catch(error){\n        dispatch({\n                        type: USER_REGISTER_FAIL,\n                        payload: error.response && error.response.data.message ? \n                        error.response.data.message\n                        : error.message\n                    })\n    }\n\n}\n\n\nexport const saveSellerRegister = ( sellerRegister) => async (dispatch, getState) => {\n\n   \n    console.log('USER2',  sellerRegister)\n\n   \n  try {\n    dispatch({\n      type: SELLER_REGISTER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/sellerRegister`, sellerRegister,  config)\n\n\n    console.log('USER REGISTER ACTION', data)\n\n    //console.log('USER4', sellerRegister,)\n\n    dispatch({\n      type: SELLER_REGISTER_SUCCESS,\n      payload: data,\n    })\n    \n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: SELLER_REGISTER_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\n\n\nexport const sellerConfirmationPost = (userId, sellerConfirmation) => async (dispatch, getState) => {\n\n    console.log('SELLER1', sellerConfirmation)\n\n   \n\n  try {\n    dispatch({\n      type: SELLER_CONFIRMATION_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n \n\n    const { data } = await axios.put(`/api/users/sellerConfirm/${userId}`, sellerConfirmation, config)\n\n    console.log('ORDER3', data)\n\n    console.log('ORDER4', sellerConfirmation,)\n\n    dispatch({\n      type: SELLER_CONFIRMATION_SUCCESS,\n      payload: data,\n    })\n    \n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: SELLER_CONFIRMATION_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\n\n\n    export const getUserDetails = (id) => async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: USER_DETAILS_REQUEST\n            })\n\n            const { userLogin: { userInfo } } = getState()\n\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const { data } = await axios.get(`/api/users/${id}`, config)\n\n            //console.log('USER ACTION', data)\n\n            dispatch({\n                type: USER_DETAILS_SUCCESS,\n                payload: data\n            })\n\n            \n\n       \n\n        } catch(error){\n            dispatch({\n                            type: USER_DETAILS_FAIL,\n                            payload: error.response && error.response.data.message ? \n                            error.response.data.message\n                            : error.message\n                        })\n        }\n\n    \n}\n\nexport const getUserSellerDetails = (userId) => async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: USER_DETAILS_SELLER_REQUEST\n            })\n\n            const { userLogin: { userInfo } } = getState()\n\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const { data } = await axios.get(`/api/users/seller/${userId}`, config)\n\n            dispatch({\n                type: USER_DETAILS_SELLER_SUCCESS,\n                payload: data\n            })\n\n            \n\n       \n\n        } catch(error){\n            dispatch({\n                            type: USER_DETAILS_SELLER_FAIL,\n                            payload: error.response && error.response.data.message ? \n                            error.response.data.message\n                            : error.message\n                        })\n        }\n\n    \n}\n\n export const updateUserProfile = (user) => async (dispatch, getState) => {\n        try {\n            dispatch({\n                type: USER_UPDATE_PROFILE_REQUEST\n            })\n\n            const { userLogin: { userInfo } } = getState()\n\n            const config = {\n                headers: {\n                    'Content-Type': 'application/json',\n                    Authorization: `Bearer ${userInfo.token}`\n                }\n            }\n\n            const { data } = await axios.put(`/api/users/profile`, user,  config)\n\n            dispatch({\n                type: USER_UPDATE_PROFILE_SUCCESS,\n                payload: data\n            })\n\n            dispatch({\n                type: USER_LOGIN_SUCCESS,\n                payload: data,\n            })\n\n            localStorage.setItem('userInfo', JSON.stringify(data))\n\n            \n\n       \n\n        } catch(error){\n            dispatch({\n                            type: USER_UPDATE_PROFILE_FAIL,\n                            payload: error.response && error.response.data.message ? \n                            error.response.data.message\n                            : error.message\n                        })\n        }\n\n    \n}\n\n\n\n export const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({ type: USER_DELETE_SUCCESS })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({ type: USER_UPDATE_SUCCESS })\n\n    dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\n\n    dispatch({ type: USER_DETAILS_RESET })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}