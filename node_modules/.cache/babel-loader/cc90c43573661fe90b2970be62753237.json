{"ast":null,"code":"import _slicedToArray from\"/Users/onesmusnyakotyo/ocart/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{Form,Button,Col}from'react-bootstrap';import{useDispatch,useSelector}from'react-redux';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{savePaymentMethod}from'../actions/cartActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaymentScreen=function PaymentScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){history.push('/shipping');}//const [paymentMethod, setPaymentMethod ] = useState('PayPal')\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),stripePaymentMethod=_useState2[0],setStripePaymentMethod=_useState2[1];var dispatch=useDispatch();// if(stripePaymentMethod) {\n//   const submitHandler = (e) => {\n//   e.preventDefault()\n//   dispatch(savePaymentMethod(stripePaymentMethod))\n//   history.push('/placeorder')\n// }\n// } else {\n//   const submitHandler = (e) => {\n//   e.preventDefault()\n//   dispatch(savePaymentMethod(paymentMethod))\n//   history.push('/placeorder')\n// }\n// }\nvar submitHandler=function submitHandler(e){e.preventDefault();//dispatch(savePaymentMethod(paymentMethod))\ndispatch(savePaymentMethod(stripePaymentMethod));//history.push('/placeorder')\nhistory.push('/checkout');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Stripe\",id:\"Stripe\",name:\"stripePaymentMethod\",required:true,onChange:function onChange(e){return setStripePaymentMethod(e.target.value);}})})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default PaymentScreen;","map":{"version":3,"sources":["/Users/onesmusnyakotyo/ocart/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","Form","Button","Col","useDispatch","useSelector","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","history","cart","state","shippingAddress","push","stripePaymentMethod","setStripePaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,CAAeC,MAAf,CAAuBC,GAAvB,KAAkC,iBAAlC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,iBAAT,KAAkC,wBAAlC,C,wFAGA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACrC,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAACO,KAAD,QAAWA,CAAAA,KAAK,CAACD,IAAjB,EAAD,CAAxB,CADqC,GAE7BE,CAAAA,eAF6B,CAETF,IAFS,CAE7BE,eAF6B,CAIrC,GAAG,CAACA,eAAJ,CAAoB,CAChBH,OAAO,CAACI,IAAR,CAAa,WAAb,EACH,CAED;AARqC,cAUmBd,QAAQ,CAAC,EAAD,CAV3B,wCAU7Be,mBAV6B,eAURC,sBAVQ,eAcrC,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEE,GAAMc,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CAC7BA,CAAC,CAACC,cAAF,GACA;AACAH,QAAQ,CAACT,iBAAiB,CAACO,mBAAD,CAAlB,CAAR,CACC;AACDL,OAAO,CAACI,IAAR,CAAa,WAAb,EAEC,CAPD,CAUF,mBACE,MAAC,aAAD,yBACE,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADF,cAEE,sCAFF,cAGE,MAAC,IAAD,EAAM,QAAQ,CAAEI,aAAhB,wBACE,MAAC,IAAD,CAAM,KAAN,yBACE,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADF,cAGA,KAAC,GAAD,wBAYK,KAAC,IAAD,CAAM,KAAN,EACI,IAAI,CAAE,OADV,CAEI,KAAK,CAAC,QAFV,CAGI,EAAE,CAAC,QAHP,CAII,IAAI,CAAC,qBAJT,CAKI,QAAQ,CAAI,IALhB,CAMI,QAAQ,CAAE,kBAACC,CAAD,QAAOH,CAAAA,sBAAsB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAA7B,EANd,EAZL,EAHA,GADF,cA6BE,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBA7BF,GAHF,GADF,CAyCD,CAtFD,CAwFA,cAAeb,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react'\nimport { Form, Button, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport FormContainer from '../components/FormContainer'\nimport CheckoutSteps from '../components/CheckoutSteps'\nimport { savePaymentMethod } from '../actions/cartActions'\n\n\nconst PaymentScreen = ({ history }) => {\n  const cart = useSelector((state) => state.cart)\n  const { shippingAddress } = cart\n\n  if(!shippingAddress){\n      history.push('/shipping')\n  }\n\n  //const [paymentMethod, setPaymentMethod ] = useState('PayPal')\n\n   const [stripePaymentMethod, setStripePaymentMethod ] = useState('')\n\n  \n  \n  const dispatch = useDispatch()\n\n  // if(stripePaymentMethod) {\n\n  //   const submitHandler = (e) => {\n  //   e.preventDefault()\n  //   dispatch(savePaymentMethod(stripePaymentMethod))\n  //   history.push('/placeorder')\n\n  // }\n\n  // } else {\n\n  //   const submitHandler = (e) => {\n  //   e.preventDefault()\n  //   dispatch(savePaymentMethod(paymentMethod))\n  //   history.push('/placeorder')\n  // }\n\n  // }\n\n    const submitHandler = (e) => {\n    e.preventDefault()\n    //dispatch(savePaymentMethod(paymentMethod))\n    dispatch(savePaymentMethod(stripePaymentMethod))\n     //history.push('/placeorder')\n    history.push('/checkout')\n\n    }\n\n  \n  return (\n    <FormContainer>\n      <CheckoutSteps step1 step2 step3/>\n      <h1>Payment Method</h1>\n      <Form onSubmit={submitHandler}>\n        <Form.Group>\n          <Form.Label as='legend'>Select Method</Form.Label>\n        \n        <Col>\n            {/* <Form.Check\n                type= 'radio'\n                label='PayPal or Creadit Card'\n                id='PayPal'\n                name='paymentMethod'\n                value='PayPal'\n                checked\n                Change={(e) => setPaymentMethod(e.target.value)}\n            > \n            </Form.Check> */}\n\n             <Form.Check\n                 type= 'radio'\n                 label='Stripe'\n                 id='Stripe'\n                 name='stripePaymentMethod'\n                 required = {true}\n                 onChange={(e) => setStripePaymentMethod(e.target.value)}\n             > \n             </Form.Check>\n        </Col>\n\n        </Form.Group>\n\n        <Button type='submit' variant='primary'>\n          Continue\n        </Button>\n\n        </Form>\n     \n    </FormContainer>\n  )\n}\n\nexport default PaymentScreen"]},"metadata":{},"sourceType":"module"}