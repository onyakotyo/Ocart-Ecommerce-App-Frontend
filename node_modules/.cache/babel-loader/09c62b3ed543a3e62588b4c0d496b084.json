{"ast":null,"code":"var _jsxFileName = \"/Users/onesmusnyakotyo/ocart/frontend/src/screens/SellRegisterScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Form, Button } from 'react-bootstrap'; //import { LinkContainer } from 'react-router-bootstrap'\n\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { useDispatch } from 'react-redux';\nimport { saveSellerRegister } from '../actions/userActions';\nimport { getUserDetails } from '../actions/userActions';\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SellRegisterScreen = ({\n  history\n}) => {\n  _s();\n\n  const [firstName, setFirstname] = useState('');\n  const [middleName, setMiddlename] = useState('');\n  const [lastName, setLastname] = useState('');\n  const [email, setEmail] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [companyName, setCompanyName] = useState('');\n  const [address, setAddress] = useState('');\n  const [town, setTown] = useState('');\n  const [country, setCountry] = useState('');\n  const [bankAccount, setBankAccount] = useState('');\n  const [chargeCard, setChargeCard] = useState('');\n  const [idNumber, setIdNumber] = useState('');\n  const dispatch = useDispatch();\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    user\n  } = userDetails; //console.log('USER-DETAILS', user)\n\n  const userLogin = useSelector(state => state.userLogin); //console.log('USER-LOGIN', userLogin)\n\n  const {\n    loading,\n    error,\n    userInfo\n  } = userLogin;\n  const userUpdateProfile = useSelector(state => state.userUpdateProfile);\n  const {\n    success\n  } = userUpdateProfile;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      if (!user.name || success) {\n        dispatch({\n          type: USER_UPDATE_PROFILE_RESET\n        });\n        dispatch(getUserDetails('profile'));\n      } else {\n        setLastname(user.name);\n        setEmail(user.email);\n      }\n    }\n  }, [dispatch, history, userInfo, user, success]);\n  const sellerRegister = useSelector(state => state.sellerRegister);\n  const {\n    success: sellerRegisterSuccess\n  } = sellerRegister;\n\n  const submitHandler = (e, sellerRegister, sellerConfirmation) => {\n    e.preventDefault();\n\n    if (!userInfo) {\n      history.push('/login');\n    } else {\n      //dispatch({ type: USER_UPDATE_PROFILE_RESET })\n      //dispatch(getUserDetails('profile'))\n      dispatch(saveSellerRegister(sellerRegister = {\n        user,\n        firstName,\n        middleName,\n        lastName,\n        companyName,\n        address,\n        town,\n        country,\n        mobile,\n        email,\n        idNumber,\n        bankAccount,\n        chargeCard\n      }));\n\n      if (sellerRegister.user) {\n        history.push('/sellerRegisterRequest');\n      } else {\n        history.push('/');\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [error && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 26\n      }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"text-center py-3 m-3\",\n        children: \"Seller Register Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"text-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"text-center py-2\",\n            children: \"Register to sell - Fill in Form below\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"First name\",\n            value: firstName,\n            required: true,\n            onChange: e => setFirstname(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Middle name\",\n            value: middleName,\n            onChange: e => setMiddlename(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Last name\",\n            value: lastName,\n            required: true,\n            onChange: e => setLastname(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Company name\",\n            value: companyName,\n            required: true,\n            onChange: e => setCompanyName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"address\",\n            value: address,\n            required: true,\n            onChange: e => setAddress(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"City/Town\",\n            value: town,\n            required: true,\n            onChange: e => setTown(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"country\",\n            value: country,\n            required: true,\n            onChange: e => setCountry(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Mobile Number\",\n            value: mobile,\n            required: true,\n            onChange: e => setMobile(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Email Address\",\n            value: email,\n            required: true,\n            onChange: e => setEmail(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Emirates ID Number\",\n            value: idNumber,\n            required: true,\n            onChange: e => setIdNumber(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Chargeable Bank Card\",\n            value: chargeCard,\n            required: true,\n            onChange: e => setChargeCard(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Bank Account to send selling proceedings\",\n            value: bankAccount,\n            required: true,\n            onChange: e => setBankAccount(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Continue\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(SellRegisterScreen, \"8yHJLRrzpcxMRyc+CAlwz+/86qY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = SellRegisterScreen;\nexport default SellRegisterScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellRegisterScreen\");","map":{"version":3,"sources":["/Users/onesmusnyakotyo/ocart/frontend/src/screens/SellRegisterScreen.js"],"names":["React","useEffect","useState","useSelector","Form","Button","Message","Loader","FormContainer","useDispatch","saveSellerRegister","getUserDetails","USER_UPDATE_PROFILE_RESET","SellRegisterScreen","history","firstName","setFirstname","middleName","setMiddlename","lastName","setLastname","email","setEmail","mobile","setMobile","companyName","setCompanyName","address","setAddress","town","setTown","country","setCountry","bankAccount","setBankAccount","chargeCard","setChargeCard","idNumber","setIdNumber","dispatch","userDetails","state","user","userLogin","loading","error","userInfo","userUpdateProfile","success","push","name","type","sellerRegister","sellerRegisterSuccess","submitHandler","e","sellerConfirmation","preventDefault","target","value"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport { useSelector } from 'react-redux'\nimport {Form, Button} from 'react-bootstrap'\n//import { LinkContainer } from 'react-router-bootstrap'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { useDispatch} from 'react-redux'\nimport { saveSellerRegister} from '../actions/userActions'\nimport { getUserDetails } from '../actions/userActions'\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants'\n\nconst SellRegisterScreen = ({history}) => {\n\n \n  \n    const [firstName, setFirstname] = useState('')\n    const [middleName, setMiddlename] = useState('')\n    const [lastName, setLastname] = useState('')\n    const [email, setEmail] = useState('')\n    const [mobile, setMobile] = useState('')\n    const [companyName, setCompanyName] = useState('')\n    const [address, setAddress] = useState('')\n    const [town, setTown] = useState('')\n    const [country, setCountry] = useState('')\n    const [bankAccount, setBankAccount] = useState('')\n    const [chargeCard, setChargeCard] = useState('')\n    const [idNumber,  setIdNumber] = useState('')\n  \n\n    const dispatch = useDispatch()\n\n     const userDetails = useSelector(state => state.userDetails)\n    const { user} = userDetails\n\n    //console.log('USER-DETAILS', user)\n\n\n    const userLogin = useSelector(state => state.userLogin)\n\n    //console.log('USER-LOGIN', userLogin)\n\n\n    const { loading, error, userInfo} = userLogin\n\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\n    const { success } = userUpdateProfile\n\n\n\n\n    useEffect(() => {\n        if(!userInfo) {\n            history.push('/login')\n        } else {\n            if(!user.name || success ){\n                dispatch({ type: USER_UPDATE_PROFILE_RESET })\n                dispatch(getUserDetails('profile'))\n            } else{\n                setLastname(user.name)\n                setEmail(user.email)\n            }\n        }\n    }, [dispatch, history, userInfo, user, success ])\n\n\n    const sellerRegister =  useSelector(state => state.sellerRegister)\n    const { success: sellerRegisterSuccess } = sellerRegister\n\n  \n\n      \n\n\n    const submitHandler = (e, sellerRegister, sellerConfirmation) => {\n    e.preventDefault()\n    if(!userInfo){\n        history.push('/login')\n    }else{\n        //dispatch({ type: USER_UPDATE_PROFILE_RESET })\n        //dispatch(getUserDetails('profile'))\n        dispatch(saveSellerRegister(\n       \n       sellerRegister =  { \n           user,\n           firstName, \n           middleName, \n           lastName, \n           companyName,\n           address, \n           town, \n           country,\n           mobile, \n           email, \n           idNumber,\n           bankAccount,\n           chargeCard\n            \n        },\n       \n\n        ))\n         if(sellerRegister.user) {\n            history.push('/sellerRegisterRequest')\n            } else {\n                 history.push('/')\n            }\n   \n    }\n    \n  }\n\n    return (\n        <>\n            <FormContainer>\n\n\n               {error && <Message variant='danger'>{error}</Message>}\n               {loading && <Loader />}\n                   \n                <h5 className='text-center py-3 m-3'>Seller Register Form</h5>\n                 \n                     \n\n                <Form  onSubmit={submitHandler}> \n                <Form.Group className='text-center'>\n                     \n                    <h5 className='text-center py-2'>Register to sell - Fill in Form below</h5>\n  \n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"First name\"  \n                        value={firstName}\n                        required\n                        onChange={(e) => setFirstname(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Middle name\" \n                        value={middleName}\n                        onChange={(e) => setMiddlename(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Last name\" \n                        value={lastName}\n                        required\n                        onChange={(e) => setLastname(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Company name\" \n                        value={companyName}\n                        required\n                        onChange={(e) => setCompanyName(e.target.value)}\n                        />\n                    <br />\n                    \n                     <Form.Control \n                        type=\"text\" \n                        placeholder=\"address\" \n                        value={address}\n                        required\n                        onChange={(e) => setAddress(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"City/Town\" \n                        value={town}\n                        required\n                        onChange={(e) => setTown(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"country\" \n                        value={country}\n                        required\n                        onChange={(e) => setCountry(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Mobile Number\" \n                        value={mobile}\n                        required\n                        onChange={(e) => setMobile(e.target.value)}\n                        />\n                    <br />\n                    <Form.Control \n                        type=\"text\" \n                        placeholder=\"Email Address\" \n                        value={email}\n                        required\n                        onChange={(e) => setEmail(e.target.value)}\n                        />\n                    <br />\n                     <Form.Control \n                        type=\"text\" \n                        placeholder=\"Emirates ID Number\" \n                        value={idNumber}\n                        required\n                        onChange={(e) => setIdNumber(e.target.value)}\n                        /> \n                    <br />\n                      <Form.Control \n                        type=\"text\" \n                        placeholder=\"Chargeable Bank Card\" \n                        value={chargeCard}\n                        required\n                        onChange={(e) => setChargeCard(e.target.value)}\n                        /> \n                    <br />\n                      <Form.Control \n                        type=\"text\" \n                        placeholder=\"Bank Account to send selling proceedings\" \n                        value={bankAccount}\n                        required\n                        onChange={(e) => setBankAccount(e.target.value)}\n                        /> \n                    <br />\n\n                     <Button type='submit' variant='primary'>\n                            Continue\n                    </Button>\n  \n                </Form.Group>\n                </Form>  \n            </FormContainer>\n            \n        </>\n    )\n}\n\nexport default SellRegisterScreen\n\n"]},"metadata":{},"sourceType":"module"}