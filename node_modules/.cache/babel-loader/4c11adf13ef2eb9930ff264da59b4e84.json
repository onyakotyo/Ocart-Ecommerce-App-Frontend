{"ast":null,"code":"import axios from 'axios';\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants';\nimport { ORDER_CREATE_REQUEST, ORDER_CREATE_SUCCESS, ORDER_CREATE_FAIL, ORDER_DETAILS_FAIL, ORDER_DETAILS_SUCCESS, ORDER_DETAILS_REQUEST, ORDER_PAY_FAIL, ORDER_PAY_SUCCESS, ORDER_PAY_REQUEST, ORDER_LIST_MY_REQUEST, ORDER_LIST_MY_SUCCESS, ORDER_LIST_MY_FAIL, ORDER_LIST_FAIL, ORDER_LIST_SUCCESS, ORDER_LIST_REQUEST, SELLER_ORDER_LIST_FAIL, SELLER_ORDER_LIST_SUCCESS, SELLER_ORDER_LIST_REQUEST, ORDER_DELIVER_FAIL, SELLER_PLACED_ORDER_LIST_SUCCESS, SELLER_PLACED_ORDER_LIST_REQUEST, SELLER_PLACED_ORDER_LIST_FAIL, ORDER_DELIVER_SUCCESS, ORDER_DELIVER_REQUEST } from '../constants/orderConstants';\nimport { logout } from './userActions';\nexport const createOrder = order => async (dispatch, getState) => {\n  console.log('DATA CREATE ORDER', order);\n\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    console.log('MAIL CREATE ORDER1', order); // const { data } = await axios.post(`/api/orders`, order, config)\n    // const { data } = await axios.post(`/api/mail`, order, config)\n\n    const [dataOrders, dataMail] = await Promise.all([axios.post('/api/orders', order, config), axios.post('/api/mail', order, config)]);\n    console.log('MAIL-DATA-ORDERS', dataOrders);\n    console.log('MAIL-DATA-MAIL', dataMail);\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: dataOrders\n    });\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: dataMail\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: dataOrders\n    });\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: dataMail\n    }); // dispatch({\n    //   type: CART_REMOVE_ALL_ITEMS\n    // })\n\n    localStorage.removeItem('cartItems');\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const getOrderDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/${id}`, config);\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message\n    });\n  }\n};\nexport const payOrder = orderId => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${orderId}/pay`, config);\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deliverOrder = order => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/orders/${order._id}/deliver`, {}, config);\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/myorders`, config);\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const listSellerOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SELLER_ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders/sellerOrders`, config);\n    dispatch({\n      type: SELLER_ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: SELLER_ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const sellerPlacedlistOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SELLER_PLACED_ORDER_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/orders`, config);\n    dispatch({\n      type: SELLER_PLACED_ORDER_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout());\n    }\n\n    dispatch({\n      type: SELLER_PLACED_ORDER_LIST_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/onesmusnyakotyo/ocart/frontend/src/actions/orderActions.js"],"names":["axios","CART_CLEAR_ITEMS","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_FAIL","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_REQUEST","ORDER_PAY_FAIL","ORDER_PAY_SUCCESS","ORDER_PAY_REQUEST","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_FAIL","ORDER_LIST_SUCCESS","ORDER_LIST_REQUEST","SELLER_ORDER_LIST_FAIL","SELLER_ORDER_LIST_SUCCESS","SELLER_ORDER_LIST_REQUEST","ORDER_DELIVER_FAIL","SELLER_PLACED_ORDER_LIST_SUCCESS","SELLER_PLACED_ORDER_LIST_REQUEST","SELLER_PLACED_ORDER_LIST_FAIL","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_REQUEST","logout","createOrder","order","dispatch","getState","console","log","type","userLogin","userInfo","config","headers","Authorization","token","dataOrders","dataMail","Promise","all","post","payload","localStorage","removeItem","error","message","response","data","getOrderDetails","id","get","payOrder","orderId","put","deliverOrder","_id","listMyOrders","listOrders","listSellerOrders","sellerPlacedlistOrders"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { CART_CLEAR_ITEMS } from '../constants/cartConstants'\nimport {\n  ORDER_CREATE_REQUEST,\n  ORDER_CREATE_SUCCESS,\n  ORDER_CREATE_FAIL,\n  ORDER_DETAILS_FAIL,\n  ORDER_DETAILS_SUCCESS,\n  ORDER_DETAILS_REQUEST,\n  ORDER_PAY_FAIL,\n  ORDER_PAY_SUCCESS,\n  ORDER_PAY_REQUEST,\n  ORDER_LIST_MY_REQUEST,\n  ORDER_LIST_MY_SUCCESS,\n  ORDER_LIST_MY_FAIL,\n  ORDER_LIST_FAIL,\n  ORDER_LIST_SUCCESS,\n  ORDER_LIST_REQUEST,\n  SELLER_ORDER_LIST_FAIL,\n  SELLER_ORDER_LIST_SUCCESS,\n  SELLER_ORDER_LIST_REQUEST,\n  ORDER_DELIVER_FAIL,\n  SELLER_PLACED_ORDER_LIST_SUCCESS,\n  SELLER_PLACED_ORDER_LIST_REQUEST,\n  SELLER_PLACED_ORDER_LIST_FAIL,\n  ORDER_DELIVER_SUCCESS,\n  ORDER_DELIVER_REQUEST,\n} from '../constants/orderConstants'\nimport { logout } from './userActions'\n\nexport const createOrder = (order) => async (dispatch, getState) => {\n\n   console.log('DATA CREATE ORDER',order)\n  try {\n    dispatch({\n      type: ORDER_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n     console.log('MAIL CREATE ORDER1',order)\n\n   \n\n    // const { data } = await axios.post(`/api/orders`, order, config)\n\n    // const { data } = await axios.post(`/api/mail`, order, config)\n\n  const [dataOrders, dataMail] = await Promise.all([axios.post('/api/orders', order, config), axios.post('/api/mail', order, config)])\n\n    console.log('MAIL-DATA-ORDERS',dataOrders)\n\n    console.log('MAIL-DATA-MAIL',dataMail)\n\n    dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: dataOrders,\n    })\n\n     dispatch({\n      type: ORDER_CREATE_SUCCESS,\n      payload: dataMail,\n    })\n\n    dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: dataOrders,\n    })\n\n     dispatch({\n      type: CART_CLEAR_ITEMS,\n      payload: dataMail,\n    })\n\n    // dispatch({\n    //   type: CART_REMOVE_ALL_ITEMS\n\n    // })\n\n    localStorage.removeItem('cartItems')\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/${id}`, config)\n\n    dispatch({\n      type: ORDER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\nexport const payOrder = (orderId, ) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: ORDER_PAY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${orderId}/pay`,\n      config\n    )\n\n    dispatch({\n      type: ORDER_PAY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_PAY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deliverOrder = (order) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_DELIVER_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/orders/${order._id}/deliver`,\n      {},\n      config\n    )\n\n    dispatch({\n      type: ORDER_DELIVER_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_DELIVER_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listMyOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_MY_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/myorders`, config)\n\n    dispatch({\n      type: ORDER_LIST_MY_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_MY_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\nexport const listSellerOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SELLER_ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders/sellerOrders`, config)\n\n    dispatch({\n      type: SELLER_ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: SELLER_ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\n\n\nexport const sellerPlacedlistOrders = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: SELLER_PLACED_ORDER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.get(`/api/orders`, config)\n\n    dispatch({\n      type: SELLER_PLACED_ORDER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: SELLER_PLACED_ORDER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}"]},"metadata":{},"sourceType":"module"}