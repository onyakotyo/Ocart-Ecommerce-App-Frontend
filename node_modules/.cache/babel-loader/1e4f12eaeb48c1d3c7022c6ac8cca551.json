{"ast":null,"code":"var _jsxFileName = \"/Users/onesmusnyakotyo/ocart/frontend/src/screens/SellerOrderListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { Table, Button } from 'react-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listSellerOrders } from '../actions/orderActions';\nimport { getUserDetails } from '../actions/userActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SellerOrderListScreen = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const sellerOrderList = useSelector(state => state.sellerOrderList);\n  const {\n    loading,\n    error,\n    orders\n  } = sellerOrderList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userDetails = useSelector(state => state.userDetails);\n  const {\n    user\n  } = userDetails;\n  useEffect(() => {\n    if (userInfo) {\n      dispatch(getUserDetails(userInfo._id));\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo]);\n  useEffect(() => {\n    if (userInfo && user.isSeller) {\n      dispatch(listSellerOrders());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo, user.isSeller]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Seller Orders List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      className: \"table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"USER\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"EMAIL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DATE\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"TOTAL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"PAID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"DELIVERED\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.orderId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.user.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order.createdAt.substring(0, 10)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [\"$\", order.totalPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order && order.isPaid ? order.paidAt.substring(0, 10) //order.paidAt\n            :\n            /*#__PURE__*/\n            _jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: order && order.isDelivered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n              to: `/order/${order._id}`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"success\",\n                className: \"btn-sm \",\n                children: \"Details\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this)]\n        }, order._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(SellerOrderListScreen, \"GwUuWj7/diVTKLUo46PQnDMnwoU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = SellerOrderListScreen;\nexport default SellerOrderListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SellerOrderListScreen\");","map":{"version":3,"sources":["/Users/onesmusnyakotyo/ocart/frontend/src/screens/SellerOrderListScreen.js"],"names":["React","useEffect","LinkContainer","Table","Button","useDispatch","useSelector","Message","Loader","listSellerOrders","getUserDetails","SellerOrderListScreen","history","dispatch","sellerOrderList","state","loading","error","orders","userLogin","userInfo","userDetails","user","_id","push","isSeller","map","order","orderId","name","email","createdAt","substring","totalPrice","isPaid","paidAt","color","isDelivered","deliveredAt"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport {  Table, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listSellerOrders } from '../actions/orderActions'\nimport { getUserDetails } from '../actions/userActions'\n\nconst SellerOrderListScreen = ({ history }) => {\n\n  \n\n  const dispatch = useDispatch()\n\n  const sellerOrderList = useSelector((state) => state.sellerOrderList)\n  const { loading, error, orders } = sellerOrderList\n  \n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n    const userDetails = useSelector(state => state.userDetails)\n    const {user} = userDetails\n\n  useEffect(() => {\n    if (userInfo) {\n      dispatch(getUserDetails(userInfo._id))\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo])\n\n   useEffect(() => {\n    if (userInfo && user.isSeller) {\n      dispatch(listSellerOrders())\n    } else {\n      history.push('/login')\n    }\n  }, [dispatch, history, userInfo, user.isSeller])\n\n  return (\n    <>\n      \n      <h1>Seller Orders List</h1>\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        \n        <Table striped bordered hover responsive className='table-sm'>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>USER</th>\n              <th>EMAIL</th>\n              <th>DATE</th>\n              <th>TOTAL</th>\n              <th>PAID</th>\n              <th>DELIVERED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {orders.map((order) => (\n              <tr key={order._id}>\n                <td>{order.orderId}</td>\n                <td>{order.user.name }</td>\n                <td>{order.user.email }</td>\n                <td>{order.createdAt.substring(0, 10)}</td>\n                <td>${order.totalPrice}</td>\n                <td>\n                  {order && order.isPaid  ? (\n                    order.paidAt.substring(0, 10) \n                    //order.paidAt\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  {order && order.isDelivered ? (\n                    order.deliveredAt.substring(0, 10)\n                  ) : (\n                    <i className='fas fa-times' style={{ color: 'red' }}></i>\n                  )}\n                </td>\n                <td>\n                  <LinkContainer to={`/order/${order._id}`} >\n                    <Button variant='success' className='btn-sm '>\n                      Details\n                    </Button>\n                  </LinkContainer>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n\n        </Table>\n        \n      )}\n      \n    </>\n  )\n}\n\nexport default SellerOrderListScreen"]},"metadata":{},"sourceType":"module"}